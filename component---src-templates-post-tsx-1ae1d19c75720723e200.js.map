{"version":3,"file":"component---src-templates-post-tsx-1ae1d19c75720723e200.js","mappings":"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","sources":["webpack://site-gruppo-natura-lentiai/./node_modules/camelcase/index.js","webpack://site-gruppo-natura-lentiai/../src/image-utils.ts","webpack://site-gruppo-natura-lentiai/../src/components/hooks.ts","webpack://site-gruppo-natura-lentiai/../src/components/layout-wrapper.tsx","webpack://site-gruppo-natura-lentiai/../src/components/picture.tsx","webpack://site-gruppo-natura-lentiai/../src/components/placeholder.tsx","webpack://site-gruppo-natura-lentiai/../src/components/main-image.tsx","webpack://site-gruppo-natura-lentiai/../src/components/gatsby-image.server.tsx","webpack://site-gruppo-natura-lentiai/../src/components/gatsby-image.browser.tsx","webpack://site-gruppo-natura-lentiai/../src/components/static-image.server.tsx","webpack://site-gruppo-natura-lentiai/../src/components/static-image.tsx","webpack://site-gruppo-natura-lentiai/./src/constants.ts","webpack://site-gruppo-natura-lentiai/./node_modules/@portabletext/toolkit/dist/index.js","webpack://site-gruppo-natura-lentiai/./node_modules/@portabletext/react/dist/index.js","webpack://site-gruppo-natura-lentiai/./src/components/portable-text-components/index.tsx","webpack://site-gruppo-natura-lentiai/./src/helpers.ts","webpack://site-gruppo-natura-lentiai/./src/templates/post.tsx"],"sourcesContent":["'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","export const remoteGraphqlURL =\n  \"https://ze02ljgl.api.sanity.io/v2023-08-01/graphql/post-blog/default\" as const\n\nexport const pathPrefix = \"/Frontend\" as const\n","function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction isPortableTextSpan(node) {\n  return node._type === \"span\" && \"text\" in node && typeof node.text == \"string\" && (typeof node.marks > \"u\" || Array.isArray(node.marks) && node.marks.every(mark => typeof mark == \"string\"));\n}\nfunction isPortableTextBlock(node) {\n  return (\n    // A block doesn't _have_ to be named 'block' - to differentiate between\n    // allowed child types and marks, one might name them differently\n    typeof node._type == \"string\" &&\n    // Toolkit-types like nested spans are @-prefixed\n    node._type[0] !== \"@\" && (\n    // `markDefs` isn't _required_ per say, but if it's there, it needs to be an array\n    !(\"markDefs\" in node) || !node.markDefs || Array.isArray(node.markDefs) &&\n    // Every mark definition needs to have an `_key` to be mappable in child spans\n    node.markDefs.every(def => typeof def._key == \"string\")) &&\n    // `children` is required and needs to be an array\n    \"children\" in node && Array.isArray(node.children) &&\n    // All children are objects with `_type` (usually spans, but can contain other stuff)\n    node.children.every(child => typeof child == \"object\" && \"_type\" in child)\n  );\n}\nfunction isPortableTextListItemBlock(block) {\n  return isPortableTextBlock(block) && \"listItem\" in block && typeof block.listItem == \"string\" && (typeof block.level > \"u\" || typeof block.level == \"number\");\n}\nfunction isPortableTextToolkitList(block) {\n  return block._type === \"@list\";\n}\nfunction isPortableTextToolkitSpan(span) {\n  return span._type === \"@span\";\n}\nfunction isPortableTextToolkitTextNode(node) {\n  return node._type === \"@text\";\n}\nconst knownDecorators = [\"strong\", \"em\", \"code\", \"underline\", \"strike-through\"];\nfunction sortMarksByOccurences(span, index, blockChildren) {\n  if (!isPortableTextSpan(span) || !span.marks) return [];\n  if (!span.marks.length) return [];\n  const marks = span.marks.slice(),\n    occurences = {};\n  return marks.forEach(mark => {\n    occurences[mark] = 1;\n    for (let siblingIndex = index + 1; siblingIndex < blockChildren.length; siblingIndex++) {\n      const sibling = blockChildren[siblingIndex];\n      if (sibling && isPortableTextSpan(sibling) && Array.isArray(sibling.marks) && sibling.marks.indexOf(mark) !== -1) occurences[mark]++;else break;\n    }\n  }), marks.sort((markA, markB) => sortMarks(occurences, markA, markB));\n}\nfunction sortMarks(occurences, markA, markB) {\n  const aOccurences = occurences[markA],\n    bOccurences = occurences[markB];\n  if (aOccurences !== bOccurences) return bOccurences - aOccurences;\n  const aKnownPos = knownDecorators.indexOf(markA),\n    bKnownPos = knownDecorators.indexOf(markB);\n  return aKnownPos !== bKnownPos ? aKnownPos - bKnownPos : markA.localeCompare(markB);\n}\nfunction buildMarksTree(block) {\n  var _a;\n  const {\n    children,\n    markDefs = []\n  } = block;\n  if (!children || !children.length) return [];\n  const sortedMarks = children.map(sortMarksByOccurences),\n    rootNode = {\n      _type: \"@span\",\n      children: [],\n      markType: \"<unknown>\"\n    };\n  let nodeStack = [rootNode];\n  for (let i = 0; i < children.length; i++) {\n    const span = children[i];\n    if (!span) continue;\n    const marksNeeded = sortedMarks[i] || [];\n    let pos = 1;\n    if (nodeStack.length > 1) for (pos; pos < nodeStack.length; pos++) {\n      const mark = ((_a = nodeStack[pos]) == null ? void 0 : _a.markKey) || \"\",\n        index = marksNeeded.indexOf(mark);\n      if (index === -1) break;\n      marksNeeded.splice(index, 1);\n    }\n    nodeStack = nodeStack.slice(0, pos);\n    let currentNode = nodeStack[nodeStack.length - 1];\n    if (currentNode) {\n      for (const markKey of marksNeeded) {\n        const markDef = markDefs.find(def => def._key === markKey),\n          markType = markDef ? markDef._type : markKey,\n          node = {\n            _type: \"@span\",\n            _key: span._key,\n            children: [],\n            markDef,\n            markType,\n            markKey\n          };\n        currentNode.children.push(node), nodeStack.push(node), currentNode = node;\n      }\n      if (isPortableTextSpan(span)) {\n        const lines = span.text.split(`\n`);\n        for (let line = lines.length; line-- > 1;) lines.splice(line, 0, `\n`);\n        currentNode.children = currentNode.children.concat(lines.map(text => ({\n          _type: \"@text\",\n          text\n        })));\n      } else currentNode.children = currentNode.children.concat(span);\n    }\n  }\n  return rootNode.children;\n}\nfunction nestLists(blocks, mode) {\n  const tree = [];\n  let currentList;\n  for (let i = 0; i < blocks.length; i++) {\n    const block = blocks[i];\n    if (block) {\n      if (!isPortableTextListItemBlock(block)) {\n        tree.push(block), currentList = void 0;\n        continue;\n      }\n      if (!currentList) {\n        currentList = listFromBlock(block, i, mode), tree.push(currentList);\n        continue;\n      }\n      if (blockMatchesList(block, currentList)) {\n        currentList.children.push(block);\n        continue;\n      }\n      if ((block.level || 1) > currentList.level) {\n        const newList = listFromBlock(block, i, mode);\n        if (mode === \"html\") {\n          const lastListItem = currentList.children[currentList.children.length - 1],\n            newLastChild = _objectSpread(_objectSpread({}, lastListItem), {}, {\n              children: [...lastListItem.children, newList]\n            });\n          currentList.children[currentList.children.length - 1] = newLastChild;\n        } else currentList.children.push(newList);\n        currentList = newList;\n        continue;\n      }\n      if ((block.level || 1) < currentList.level) {\n        const matchingBranch = tree[tree.length - 1],\n          match = matchingBranch && findListMatching(matchingBranch, block);\n        if (match) {\n          currentList = match, currentList.children.push(block);\n          continue;\n        }\n        currentList = listFromBlock(block, i, mode), tree.push(currentList);\n        continue;\n      }\n      if (block.listItem !== currentList.listItem) {\n        const matchingBranch = tree[tree.length - 1],\n          match = matchingBranch && findListMatching(matchingBranch, {\n            level: block.level || 1\n          });\n        if (match && match.listItem === block.listItem) {\n          currentList = match, currentList.children.push(block);\n          continue;\n        } else {\n          currentList = listFromBlock(block, i, mode), tree.push(currentList);\n          continue;\n        }\n      }\n      console.warn(\"Unknown state encountered for block\", block), tree.push(block);\n    }\n  }\n  return tree;\n}\nfunction blockMatchesList(block, list) {\n  return (block.level || 1) === list.level && block.listItem === list.listItem;\n}\nfunction listFromBlock(block, index, mode) {\n  return {\n    _type: \"@list\",\n    _key: `${block._key || `${index}`}-parent`,\n    mode,\n    level: block.level || 1,\n    listItem: block.listItem,\n    children: [block]\n  };\n}\nfunction findListMatching(rootNode, matching) {\n  const level = matching.level || 1,\n    style = matching.listItem || \"normal\",\n    filterOnType = typeof matching.listItem == \"string\";\n  if (isPortableTextToolkitList(rootNode) && (rootNode.level || 1) === level && filterOnType && (rootNode.listItem || \"normal\") === style) return rootNode;\n  if (!(\"children\" in rootNode)) return;\n  const node = rootNode.children[rootNode.children.length - 1];\n  return node && !isPortableTextSpan(node) ? findListMatching(node, matching) : void 0;\n}\nfunction spanToPlainText(span) {\n  let text = \"\";\n  return span.children.forEach(current => {\n    isPortableTextToolkitTextNode(current) ? text += current.text : isPortableTextToolkitSpan(current) && (text += spanToPlainText(current));\n  }), text;\n}\nconst leadingSpace = /^\\s/,\n  trailingSpace = /\\s$/;\nfunction toPlainText(block) {\n  const blocks = Array.isArray(block) ? block : [block];\n  let text = \"\";\n  return blocks.forEach((current, index) => {\n    if (!isPortableTextBlock(current)) return;\n    let pad = !1;\n    current.children.forEach(span => {\n      isPortableTextSpan(span) ? (text += pad && text && !trailingSpace.test(text) && !leadingSpace.test(span.text) ? \" \" : \"\", text += span.text, pad = !1) : pad = !0;\n    }), index !== blocks.length - 1 && (text += `\n\n`);\n  }), text;\n}\nconst LIST_NEST_MODE_HTML = \"html\",\n  LIST_NEST_MODE_DIRECT = \"direct\";\nexport { LIST_NEST_MODE_DIRECT, LIST_NEST_MODE_HTML, buildMarksTree, isPortableTextBlock, isPortableTextListItemBlock, isPortableTextSpan, isPortableTextToolkitList, isPortableTextToolkitSpan, isPortableTextToolkitTextNode, nestLists, sortMarksByOccurences, spanToPlainText, toPlainText };\n//# sourceMappingURL=index.js.map\n","const _excluded = [\"block\", \"list\", \"listItem\", \"marks\", \"types\"],\n  _excluded2 = [\"listItem\"],\n  _excluded3 = [\"_key\"];\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } return t; }\nimport { jsx, Fragment } from \"react/jsx-runtime\";\nimport { nestLists, LIST_NEST_MODE_HTML, isPortableTextToolkitList, isPortableTextListItemBlock, isPortableTextToolkitSpan, isPortableTextBlock, isPortableTextToolkitTextNode, spanToPlainText, buildMarksTree } from \"@portabletext/toolkit\";\nimport { toPlainText } from \"@portabletext/toolkit\";\nimport { useMemo } from \"react\";\nconst defaultLists = {\n    number: ({\n      children\n    }) => /* @__PURE__ */jsx(\"ol\", {\n      children\n    }),\n    bullet: ({\n      children\n    }) => /* @__PURE__ */jsx(\"ul\", {\n      children\n    })\n  },\n  DefaultListItem = ({\n    children\n  }) => /* @__PURE__ */jsx(\"li\", {\n    children\n  }),\n  link = ({\n    children,\n    value\n  }) => /* @__PURE__ */jsx(\"a\", {\n    href: value?.href,\n    children\n  }),\n  underlineStyle = {\n    textDecoration: \"underline\"\n  },\n  defaultMarks = {\n    em: ({\n      children\n    }) => /* @__PURE__ */jsx(\"em\", {\n      children\n    }),\n    strong: ({\n      children\n    }) => /* @__PURE__ */jsx(\"strong\", {\n      children\n    }),\n    code: ({\n      children\n    }) => /* @__PURE__ */jsx(\"code\", {\n      children\n    }),\n    underline: ({\n      children\n    }) => /* @__PURE__ */jsx(\"span\", {\n      style: underlineStyle,\n      children\n    }),\n    \"strike-through\": ({\n      children\n    }) => /* @__PURE__ */jsx(\"del\", {\n      children\n    }),\n    link\n  },\n  getTemplate = (type, prop) => `[@portabletext/react] Unknown ${type}, specify a component for it in the \\`components.${prop}\\` prop`,\n  unknownTypeWarning = typeName => getTemplate(`block type \"${typeName}\"`, \"types\"),\n  unknownMarkWarning = markType => getTemplate(`mark type \"${markType}\"`, \"marks\"),\n  unknownBlockStyleWarning = blockStyle => getTemplate(`block style \"${blockStyle}\"`, \"block\"),\n  unknownListStyleWarning = listStyle => getTemplate(`list style \"${listStyle}\"`, \"list\"),\n  unknownListItemStyleWarning = listStyle => getTemplate(`list item style \"${listStyle}\"`, \"listItem\");\nfunction printWarning(message) {\n  console.warn(message);\n}\nconst hidden = {\n    display: \"none\"\n  },\n  DefaultUnknownType = ({\n    value,\n    isInline\n  }) => {\n    const warning = unknownTypeWarning(value._type);\n    return isInline ? /* @__PURE__ */jsx(\"span\", {\n      style: hidden,\n      children: warning\n    }) : /* @__PURE__ */jsx(\"div\", {\n      style: hidden,\n      children: warning\n    });\n  },\n  DefaultUnknownMark = ({\n    markType,\n    children\n  }) => /* @__PURE__ */jsx(\"span\", {\n    className: `unknown__pt__mark__${markType}`,\n    children\n  }),\n  DefaultUnknownBlockStyle = ({\n    children\n  }) => /* @__PURE__ */jsx(\"p\", {\n    children\n  }),\n  DefaultUnknownList = ({\n    children\n  }) => /* @__PURE__ */jsx(\"ul\", {\n    children\n  }),\n  DefaultUnknownListItem = ({\n    children\n  }) => /* @__PURE__ */jsx(\"li\", {\n    children\n  }),\n  DefaultHardBreak = () => /* @__PURE__ */jsx(\"br\", {}),\n  defaultBlockStyles = {\n    normal: ({\n      children\n    }) => /* @__PURE__ */jsx(\"p\", {\n      children\n    }),\n    blockquote: ({\n      children\n    }) => /* @__PURE__ */jsx(\"blockquote\", {\n      children\n    }),\n    h1: ({\n      children\n    }) => /* @__PURE__ */jsx(\"h1\", {\n      children\n    }),\n    h2: ({\n      children\n    }) => /* @__PURE__ */jsx(\"h2\", {\n      children\n    }),\n    h3: ({\n      children\n    }) => /* @__PURE__ */jsx(\"h3\", {\n      children\n    }),\n    h4: ({\n      children\n    }) => /* @__PURE__ */jsx(\"h4\", {\n      children\n    }),\n    h5: ({\n      children\n    }) => /* @__PURE__ */jsx(\"h5\", {\n      children\n    }),\n    h6: ({\n      children\n    }) => /* @__PURE__ */jsx(\"h6\", {\n      children\n    })\n  },\n  defaultComponents = {\n    types: {},\n    block: defaultBlockStyles,\n    marks: defaultMarks,\n    list: defaultLists,\n    listItem: DefaultListItem,\n    hardBreak: DefaultHardBreak,\n    unknownType: DefaultUnknownType,\n    unknownMark: DefaultUnknownMark,\n    unknownList: DefaultUnknownList,\n    unknownListItem: DefaultUnknownListItem,\n    unknownBlockStyle: DefaultUnknownBlockStyle\n  };\nfunction mergeComponents(parent, overrides) {\n  const {\n      block,\n      list,\n      listItem,\n      marks,\n      types\n    } = overrides,\n    rest = _objectWithoutProperties(overrides, _excluded);\n  return _objectSpread(_objectSpread({}, parent), {}, {\n    block: mergeDeeply(parent, overrides, \"block\"),\n    list: mergeDeeply(parent, overrides, \"list\"),\n    listItem: mergeDeeply(parent, overrides, \"listItem\"),\n    marks: mergeDeeply(parent, overrides, \"marks\"),\n    types: mergeDeeply(parent, overrides, \"types\")\n  }, rest);\n}\nfunction mergeDeeply(parent, overrides, key) {\n  const override = overrides[key],\n    parentVal = parent[key];\n  return typeof override == \"function\" || override && typeof parentVal == \"function\" ? override : override ? _objectSpread(_objectSpread({}, parentVal), override) : parentVal;\n}\nfunction PortableText({\n  value: input,\n  components: componentOverrides,\n  listNestingMode,\n  onMissingComponent: missingComponentHandler = printWarning\n}) {\n  const handleMissingComponent = missingComponentHandler || noop,\n    blocks = Array.isArray(input) ? input : [input],\n    nested = nestLists(blocks, listNestingMode || LIST_NEST_MODE_HTML),\n    components = useMemo(() => componentOverrides ? mergeComponents(defaultComponents, componentOverrides) : defaultComponents, [componentOverrides]),\n    renderNode = useMemo(() => getNodeRenderer(components, handleMissingComponent), [components, handleMissingComponent]),\n    rendered = nested.map((node, index) => renderNode({\n      node,\n      index,\n      isInline: !1,\n      renderNode\n    }));\n  return /* @__PURE__ */jsx(Fragment, {\n    children: rendered\n  });\n}\nconst getNodeRenderer = (components, handleMissingComponent) => {\n  function renderNode(options) {\n    const {\n        node,\n        index,\n        isInline\n      } = options,\n      key = node._key || `node-${index}`;\n    return isPortableTextToolkitList(node) ? renderList(node, index, key) : isPortableTextListItemBlock(node) ? renderListItem(node, index, key) : isPortableTextToolkitSpan(node) ? renderSpan(node, index, key) : hasCustomComponentForNode(node) ? renderCustomBlock(node, index, key, isInline) : isPortableTextBlock(node) ? renderBlock(node, index, key, isInline) : isPortableTextToolkitTextNode(node) ? renderText(node, key) : renderUnknownType(node, index, key, isInline);\n  }\n  function hasCustomComponentForNode(node) {\n    return node._type in components.types;\n  }\n  function renderListItem(node, index, key) {\n    const tree = serializeBlock({\n        node,\n        index,\n        isInline: !1,\n        renderNode\n      }),\n      renderer = components.listItem,\n      Li = (typeof renderer == \"function\" ? renderer : renderer[node.listItem]) || components.unknownListItem;\n    if (Li === components.unknownListItem) {\n      const style = node.listItem || \"bullet\";\n      handleMissingComponent(unknownListItemStyleWarning(style), {\n        type: style,\n        nodeType: \"listItemStyle\"\n      });\n    }\n    let children = tree.children;\n    if (node.style && node.style !== \"normal\") {\n      const {\n          listItem\n        } = node,\n        blockNode = _objectWithoutProperties(node, _excluded2);\n      children = renderNode({\n        node: blockNode,\n        index,\n        isInline: !1,\n        renderNode\n      });\n    }\n    return /* @__PURE__ */jsx(Li, {\n      value: node,\n      index,\n      isInline: !1,\n      renderNode,\n      children\n    }, key);\n  }\n  function renderList(node, index, key) {\n    const children = node.children.map((child, childIndex) => renderNode({\n        node: child._key ? child : _objectSpread(_objectSpread({}, child), {}, {\n          _key: `li-${index}-${childIndex}`\n        }),\n        index: childIndex,\n        isInline: !1,\n        renderNode\n      })),\n      component = components.list,\n      List = (typeof component == \"function\" ? component : component[node.listItem]) || components.unknownList;\n    if (List === components.unknownList) {\n      const style = node.listItem || \"bullet\";\n      handleMissingComponent(unknownListStyleWarning(style), {\n        nodeType: \"listStyle\",\n        type: style\n      });\n    }\n    return /* @__PURE__ */jsx(List, {\n      value: node,\n      index,\n      isInline: !1,\n      renderNode,\n      children\n    }, key);\n  }\n  function renderSpan(node, _index, key) {\n    const {\n        markDef,\n        markType,\n        markKey\n      } = node,\n      Span = components.marks[markType] || components.unknownMark,\n      children = node.children.map((child, childIndex) => renderNode({\n        node: child,\n        index: childIndex,\n        isInline: !0,\n        renderNode\n      }));\n    return Span === components.unknownMark && handleMissingComponent(unknownMarkWarning(markType), {\n      nodeType: \"mark\",\n      type: markType\n    }), /* @__PURE__ */jsx(Span, {\n      text: spanToPlainText(node),\n      value: markDef,\n      markType,\n      markKey,\n      renderNode,\n      children\n    }, key);\n  }\n  function renderBlock(node, index, key, isInline) {\n    const _serializeBlock = serializeBlock({\n        node,\n        index,\n        isInline,\n        renderNode\n      }),\n      {\n        _key\n      } = _serializeBlock,\n      props = _objectWithoutProperties(_serializeBlock, _excluded3),\n      style = props.node.style || \"normal\",\n      Block = (typeof components.block == \"function\" ? components.block : components.block[style]) || components.unknownBlockStyle;\n    return Block === components.unknownBlockStyle && handleMissingComponent(unknownBlockStyleWarning(style), {\n      nodeType: \"blockStyle\",\n      type: style\n    }), /* @__PURE__ */jsx(Block, _objectSpread(_objectSpread({}, props), {}, {\n      value: props.node,\n      renderNode\n    }), key);\n  }\n  function renderText(node, key) {\n    if (node.text === `\n`) {\n      const HardBreak = components.hardBreak;\n      return HardBreak ? /* @__PURE__ */jsx(HardBreak, {}, key) : `\n`;\n    }\n    return node.text;\n  }\n  function renderUnknownType(node, index, key, isInline) {\n    const nodeOptions = {\n      value: node,\n      isInline,\n      index,\n      renderNode\n    };\n    handleMissingComponent(unknownTypeWarning(node._type), {\n      nodeType: \"block\",\n      type: node._type\n    });\n    const UnknownType = components.unknownType;\n    return /* @__PURE__ */jsx(UnknownType, _objectSpread({}, nodeOptions), key);\n  }\n  function renderCustomBlock(node, index, key, isInline) {\n    const nodeOptions = {\n        value: node,\n        isInline,\n        index,\n        renderNode\n      },\n      Node = components.types[node._type];\n    return Node ? /* @__PURE__ */jsx(Node, _objectSpread({}, nodeOptions), key) : null;\n  }\n  return renderNode;\n};\nfunction serializeBlock(options) {\n  const {\n      node,\n      index,\n      isInline,\n      renderNode\n    } = options,\n    children = buildMarksTree(node).map((child, i) => renderNode({\n      node: child,\n      isInline: !0,\n      index: i,\n      renderNode\n    }));\n  return {\n    _key: node._key || `block-${index}`,\n    children,\n    index,\n    isInline,\n    node\n  };\n}\nfunction noop() {}\nexport { PortableText, defaultComponents, mergeComponents, toPlainText };\n//# sourceMappingURL=index.js.map\n","import {\n  PortableTextComponentProps,\n  PortableTextMarkComponentProps,\n  PortableTextReactComponents,\n} from \"@portabletext/react\"\nimport React from \"react\"\nimport { getSanityImageUrl } from \"../../helpers\"\n\nconst Components: PortableTextReactComponents = {\n  types: {\n    image: ({ value }: { value: any }) => {\n      if (!value.asset || !value.asset._ref) return null\n\n      const imageUrl = getSanityImageUrl(value.asset._ref)\n      if (!imageUrl) return null\n\n      return (\n        <img\n          src={imageUrl}\n          alt={value.alt || \"Content image\"}\n          style={{ maxWidth: \"100%\", height: \"auto\" }}\n        />\n      )\n    },\n  },\n  block: {\n    normal: ({ children }) => (\n      <p style={{ lineHeight: \"1.6\", margin: \"1em 0\" }}>{children}</p>\n    ),\n  },\n  marks: {\n    link: ({ value, children }: PortableTextMarkComponentProps<any>) => {\n      const { href } = value\n      return (\n        <a\n          href={href}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          style={{ color: \"blue\" }}\n        >\n          {children}\n        </a>\n      )\n    },\n  },\n  list: {\n    bullet: ({ children }: PortableTextComponentProps<any>) => (\n      <ul>{children}</ul>\n    ),\n    number: ({ children }: PortableTextComponentProps<any>) => (\n      <ol>{children}</ol>\n    ),\n  },\n  listItem: {\n    bullet: ({ children }: PortableTextComponentProps<any>) => (\n      <li>{children}</li>\n    ),\n    number: ({ children }: PortableTextComponentProps<any>) => (\n      <li>{children}</li>\n    ),\n  },\n  hardBreak: () => <br />,\n  unknownMark: ({ children }: PortableTextMarkComponentProps<any>) => (\n    <span style={{ backgroundColor: \"yellow\" }}>{children}</span>\n  ),\n  unknownType: ({ value }: { value: any }) => (\n    <div style={{ border: \"1px solid red\", padding: \"10px\" }}>\n      Unknown type: {JSON.stringify(value)}\n    </div>\n  ),\n  unknownBlockStyle: ({ children }: PortableTextComponentProps<any>) => (\n    <div style={{ fontStyle: \"italic\", color: \"gray\" }}>{children}</div>\n  ),\n  unknownList: ({ children }: PortableTextComponentProps<any>) => (\n    <ul style={{ listStyle: \"square\" }}>{children}</ul>\n  ),\n  unknownListItem: ({ children }: PortableTextComponentProps<any>) => (\n    <li style={{ color: \"red\" }}>{children}</li>\n  ),\n}\n\nexport default Components\n","import { pathPrefix } from \"./constants\"\n\nconst stripTrailingSlash = (str: string) =>\n  str.endsWith(\"/\") ? str.slice(0, -1) : str\n\nexport const cleanSlug = (str: string) =>\n  stripTrailingSlash(str.replace(pathPrefix, \"\"))\n\nexport const getSanityImageUrl = (ref: string) => {\n  if (!ref) return null\n\n  const [, id, dimensions, format] =\n    ref.match(/image-([^-]+)-(\\d+x\\d+)-(.+)/) || []\n  if (!id || !dimensions || !format) return null\n\n  return `https://cdn.sanity.io/images/ze02ljgl/post-blog/${id}-${dimensions}.${format}`\n}\n","import { PortableText } from \"@portabletext/react\"\nimport { PageProps } from \"gatsby\"\nimport { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport React, { useEffect, useState } from \"react\"\nimport DefaultLayout from \"../components/default-layout\"\nimport Components from \"../components/portable-text-components\"\nimport { remoteGraphqlURL } from \"../constants\"\nimport _ from \"lodash\"\nimport * as T from \"../components/typography\"\n\n// Props injected during build time\ntype PostPageContext = {\n  slug: string\n  title?: string\n  publishedAt?: string\n  bodyRaw?: any\n  gatsbyImage?: IGatsbyImageData | null\n}\n\n// type for fetching remote data: dynamic fallback\ntype RemotePost = {\n  title: string\n  publishedAt: string\n  bodyRaw: any\n  image?: {\n    asset?: {\n      url?: string\n    }\n  }\n  slug: {\n    current: string\n  }\n}\n\nconst PostTemplate: React.FC<PageProps<{}, PostPageContext>> = ({\n  pageContext,\n}) => {\n  const [post, setPost] = useState<RemotePost | null>(null)\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n\n  // Destructure static context\n  const { slug, title, publishedAt, bodyRaw, gatsbyImage } = pageContext\n\n  const fetchPostData = async (slug: string) => {\n    console.log(\"Fetching data for!\", slug)\n    try {\n      const query = `query {\n        allPost {\n          title\n          slug {\n            current\n          }\n          publishedAt\n          bodyRaw\n          image {\n            asset {\n              url\n            }\n          }\n        }\n      }`\n\n      const response = await fetch(remoteGraphqlURL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ query }),\n      })\n\n      const result = await response.json()\n      if (result.errors) {\n        throw new Error(result.errors[0].message)\n      }\n\n      // TODO typing\n      const thePost = result.data.allPost\n        .filter((post: RemotePost) => post.slug.current === `${slug}`)\n        .at(0)\n      if (!thePost) {\n        console.warn(\"No post found for slug\", slug)\n        console.log(\"Posts found were\", result.data)\n        return\n      }\n      return thePost\n    } catch (err) {\n      setError(\"Failed to fetch post data.\")\n      return null\n    }\n  }\n\n  useEffect(() => {\n    // if there is no title, it means we do not have static data\n    if (!title) {\n      const loadPost = async () => {\n        setLoading(true)\n        const fetchedPost = await fetchPostData(pageContext.slug)\n        if (fetchedPost) {\n          setPost(fetchedPost)\n        }\n        setLoading(false)\n      }\n\n      loadPost()\n    }\n  }, [slug, title])\n\n  // If we have static data, use it. Otherwise, use dynamic data\n  const renderTitle = title || post?.title || \"Loading...\"\n  const renderPublishedAt = publishedAt || post?.publishedAt || null\n  const renderBody = bodyRaw || post?.bodyRaw || null\n  const renderImageUrl = post?.image?.asset?.url || null\n\n  // Handle loading and error states\n  if (loading) return <p>Loading...</p>\n  if (error) return <p>Error: {error}</p>\n\n  return (\n    <DefaultLayout>\n      <article>\n        <T.H1>{renderTitle}</T.H1>\n        {renderPublishedAt && (\n          <T.P4>\n            Articolo pubblicato in data:{\" \"}\n            {new Date(renderPublishedAt).toLocaleDateString()}\n          </T.P4>\n        )}\n        {gatsbyImage && <GatsbyImage image={gatsbyImage} alt={title ?? \"\"} />}\n        {!gatsbyImage && renderImageUrl && (\n          <img\n            src={renderImageUrl}\n            alt={title}\n            style={{ maxWidth: \"100%\", height: \"auto\" }}\n          />\n        )}\n        <PortableText\n          // Use _rawBody if present (that is we are in local environment), otherwise use bodyRaw (remote sanity api)\n          value={renderBody}\n          components={Components}\n        />\n      </article>\n    </DefaultLayout>\n  )\n}\n\nexport default PostTemplate\n"],"names":["UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","Array","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","map","x","trim","filter","length","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","lastIndex","m1","charAt","_","identifier","m","postProcess","module","exports","W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","z","e","t","a","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","src","G","children","u","V","B","U","srcSet","decoding","Y","fallback","sources","sizes","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","ae","_len","arguments","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","images","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","remoteGraphqlURL","ownKeys","Object","keys","getOwnPropertySymbols","getOwnPropertyDescriptor","enumerable","push","_objectSpread","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Symbol","toPrimitive","call","String","Number","_toPrimitive","_toPropertyKey","value","configurable","writable","isPortableTextSpan","node","_type","text","marks","every","mark","isPortableTextBlock","markDefs","def","child","isPortableTextListItemBlock","block","listItem","level","isPortableTextToolkitList","isPortableTextToolkitSpan","span","isPortableTextToolkitTextNode","knownDecorators","sortMarksByOccurences","index","blockChildren","occurences","siblingIndex","sibling","indexOf","sort","markA","markB","aOccurences","bOccurences","aKnownPos","bKnownPos","localeCompare","sortMarks","blockMatchesList","list","listFromBlock","mode","findListMatching","rootNode","matching","filterOnType","spanToPlainText","_excluded","_excluded2","_excluded3","_objectWithoutProperties","hasOwnProperty","includes","_objectWithoutPropertiesLoose","propertyIsEnumerable","underlineStyle","textDecoration","getTemplate","prop","unknownTypeWarning","typeName","printWarning","message","defaultComponents","types","normal","jsx","blockquote","h1","h2","h3","h4","h5","h6","em","strong","code","underline","link","href","number","bullet","hardBreak","unknownType","isInline","warning","unknownMark","markType","unknownList","unknownListItem","unknownBlockStyle","mergeDeeply","parent","overrides","override","parentVal","PortableText","components","componentOverrides","listNestingMode","onMissingComponent","missingComponentHandler","handleMissingComponent","noop","nested","blocks","tree","currentList","newList","lastListItem","newLastChild","matchingBranch","match","nestLists","useMemo","rest","mergeComponents","renderNode","getNodeRenderer","rendered","Fragment","childIndex","component","List","nodeType","renderList","serializeBlock","renderer","Li","renderListItem","_index","markDef","markKey","Span","unknownMarkWarning","renderSpan","hasCustomComponentForNode","nodeOptions","Node","renderCustomBlock","_serializeBlock","props","Block","blockStyle","renderBlock","HardBreak","renderText","UnknownType","renderUnknownType","_a","sortedMarks","nodeStack","marksNeeded","pos","splice","currentNode","find","lines","split","line","buildMarksTree","_ref","asset","imageUrl","id","dimensions","format","getSanityImageUrl","React","_ref2","lineHeight","margin","_ref3","target","rel","color","_ref4","_ref9","border","padding","_ref10","fontStyle","_ref11","listStyle","_ref12","_post$image","_post$image$asset","pageContext","post","setPost","useState","setLoading","error","setError","slug","title","publishedAt","bodyRaw","gatsbyImage","useEffect","loadPost","async","fetchedPost","log","query","response","fetch","method","headers","body","result","json","errors","thePost","data","allPost","at","err","fetchPostData","renderTitle","renderPublishedAt","renderBody","renderImageUrl","url","DefaultLayout","T","Date","toLocaleDateString","GatsbyImage","Components"],"sourceRoot":""}