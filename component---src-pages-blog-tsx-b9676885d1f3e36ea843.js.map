{"version":3,"file":"component---src-pages-blog-tsx-b9676885d1f3e36ea843.js","mappings":"sPAOA,MA0BMA,EAAcC,CAAAA,EAAYC,MA1BP,CACvBC,MAAO,0HAUPC,OAAQ,uBAGgB,CACxBD,MAAO,0FAQPC,OAAQ,WAwDV,UAnDaC,KACX,MAAM,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAgB,KACpC,EAACC,EAAO,EAAEC,IAAcF,EAAAA,EAAAA,WAAkB,IAC1C,EAACG,EAAK,EAAEC,IAAYJ,EAAAA,EAAAA,UAAwB,MA+BlD,OA7BAK,EAAAA,EAAAA,YAAU,KACWC,WACjBJ,GAAW,GACXE,EAAS,MACT,IACE,MAAMG,QAAiBC,MAAMC,EAAAA,EAAY,CACvCC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBnB,MAAOH,EAAYG,UAIjBC,QAAeW,EAASQ,OAC9B,GAAInB,EAAOoB,OACT,MAAM,IAAIC,MAAMrB,EAAOoB,OAAO,GAAGE,SAGnCnB,EAASoB,IAAMvB,EAAOwB,KAAM5B,EAAYI,QAC1C,CAAE,MAAOyB,GACPjB,EAASiB,EAAIH,QACf,CAAE,QACAhB,GAAW,EACb,GAGFoB,EAAY,GACX,IAECrB,EAAgBsB,EAAAA,cAAAA,IAAAA,KAAG,oBACnBpB,EAAcoB,EAAAA,cAAAA,IAAAA,KAAG,UAAQpB,GAG3BoB,EAAAA,cAACC,EAAAA,EAAa,KACZD,EAAAA,cAAAA,KAAAA,KAAI,QACJA,EAAAA,cAAAA,KAAAA,KACGzB,EAAM2B,KAAKC,GACVH,EAAAA,cAAAA,KAAAA,CAAII,IAAKD,EAAKE,KAAKC,SACjBN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAE,GAAKL,EAAKE,KAAKC,SAAYH,EAAKM,WAIhC,EAMb,MAAMC,EAAeA,IAC1BV,EAAAA,cAAAA,QAAAA,KAAO,+B","sources":["webpack://site-gruppo-natura-lentiai/./src/pages/blog.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { HeadFC, Link } from \"gatsby\"\nimport DefaultLayout from \"../components/default-layout\"\nimport { graphqlURL } from \"../constants\"\nimport * as _ from \"lodash\"\n\n\nconst queryParamsLocal = {\n  query: `{\n    allSanityPost {\n      nodes {\n        slug {\n          current\n        }\n        title\n      }\n    }\n  }` ,\n  result: \"allSanityPost.nodes\"\n} as const\n\nconst queryParamsRemote = {\n  query: `query {\n    allPost {\n      slug {\n        current\n      }\n      title\n    }\n  }`,\n  result: \"allPost\"\n} as const\n\nconst queryParams = process.env.LOCAL ? queryParamsLocal : queryParamsRemote\n\nconst Blog = () => {\n  const [posts, setPosts] = useState<any[]>([])\n  const [loading, setLoading] = useState<boolean>(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true)\n      setError(null)\n      try {\n        const response = await fetch(graphqlURL, {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            query: queryParams.query,\n          }),\n        })\n\n        const result = await response.json()\n        if (result.errors) {\n          throw new Error(result.errors[0].message)\n        }\n\n        setPosts(_.get(result.data, queryParams.result))\n      } catch (err: any) {\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchPosts()\n  }, [])\n\n  if (loading) return <p>Loading posts...</p>\n  if (error) return <p>Error: {error}</p>\n\n  return (\n    <DefaultLayout>\n      <h1>Blog</h1>\n      <ul>\n        {posts.map((post: { title: string; slug: { current: string } }) => (\n          <li key={post.slug.current}>\n            <Link to={`${post.slug.current}`}>{post.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </DefaultLayout>\n  )\n}\n\nexport default Blog\n\nexport const Head: HeadFC = () => (\n  <title>Gruppo Natura Lentiai - Blog</title>\n)\n\n"],"names":["queryParams","process","LOCAL","query","result","Blog","posts","setPosts","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","graphqlURL","method","headers","body","JSON","stringify","json","errors","Error","message","_get","data","err","fetchPosts","React","DefaultLayout","map","post","key","slug","current","Link","to","title","Head"],"sourceRoot":""}