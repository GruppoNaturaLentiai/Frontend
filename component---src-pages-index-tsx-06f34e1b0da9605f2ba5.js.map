{"version":3,"file":"component---src-pages-index-tsx-06f34e1b0da9605f2ba5.js","mappings":"oRAIO,MAAMA,EAAUC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,eAAVJ,CAAU,4LAEVK,EAAAA,GAAcC,YAGdD,EAAAA,GAAcE,QAcxBC,EAAcR,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,eAAVJ,CAAU,4dAsBxBS,EAAAA,GAAOC,MAAMC,SAKHN,EAAAA,GAAcO,OAMdP,EAAAA,GAAcQ,UAAY,GAQlCJ,EAAAA,GAAOC,MAAMI,SAILT,EAAAA,GAAcE,QAKxBQ,GAAYf,EAAAA,EAAAA,SAAOgB,EAAAA,GAAYd,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAnBJ,CAAmB,M,cCnC5C,MAzB0CiB,IAAsC,IAADC,EAAA,IAApC,IAAEC,EAAG,QAAEC,GAAwBH,EACxE,MAAM,MAAEI,EAAK,UAAEC,GAAcF,EAE7B,OACEG,EAAAA,cAACC,EAAS,KACRD,EAAAA,cAACC,EAAa,KACZD,EAAAA,cAACE,EAAAA,GAAI,CAACC,MAAM,UAAUL,GACtBE,EAAAA,cAACE,EAAAA,GAAI,CACHE,UAAU,YACVD,MAAO,qBACPE,WAAY,QACZC,wBAAyB,CAAEC,OAAQR,MAGtCH,EAAIY,OACHR,EAAAA,cAACC,EAAW,CACVO,MAAOZ,EAAIY,MACXC,IAAY,QAATd,EAAEC,EAAIa,WAAG,IAAAd,EAAAA,EAAI,GAChBe,MAAO,CAAEC,aAAc,MAAOC,UAAW,KAGnC,EC3BhB,MAAMf,EAAU,CACdC,MACE,qTACFC,UAAW,iEAsDb,MAnDuCc,KACrC,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cA4BtBC,EAAWF,EAAKG,qBAAqBC,MACrCC,EAASL,EAAKM,QAAQF,MAUtBG,EAPiBL,EAASM,KAAKC,IACnC,MAAMf,EAAQW,EAAOK,MAAM5B,GAAaA,EAAI6B,OAASF,EAAKG,WAC1D,MAAO,IACFH,EACHf,MAAOA,GAAQmB,EAAAA,EAAAA,GAASnB,EAAMoB,iBAAmB,KAClD,IAE+BJ,MAChC5B,GAAwB,oBAAjBA,EAAI8B,WAGb,OACE1B,EAAAA,cAAC6B,EAAAA,EAAa,KACXR,GAAcrB,EAAAA,cAAC8B,EAAQ,CAACjC,QAASA,EAASD,IAAKyB,IAClC,EAMb,MAAMU,EAAeA,IAAM/B,EAAAA,cAAA,aAAO,wB","sources":["webpack://site-gruppo-natura-lentiai/./src/components/hero-main/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/hero-main/index.tsx","webpack://site-gruppo-natura-lentiai/./src/pages/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { breakpointNum, colors } from \"../../styles\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nexport const Wrapper = styled.div`\n  padding: 32px;\n  @media (max-width: ${breakpointNum.smalltablet}px) {\n    padding: 0 24px;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    padding: 16px;\n  }\n  animation: fadeIn 1s ease-in-out forwards;\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n\nexport const TextWrapper = styled.div`\n  margin-top: 10px;\n  position: absolute;\n  z-index: 4;\n  max-width: calc(100% - 140px);\n  text-align: center;\n  user-select: none;\n\n  animation: fadeIn 3s ease-in-out forwards;\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  > p {\n    margin-top: 0;\n  }\n  > * {\n    color: ${colors.green.green100};\n    position: relative;\n    max-width: 1000px;\n  }\n\n  @media (max-width: ${breakpointNum.medium}px) {\n    .signature {\n      margin-top: 4px;\n    }\n  }\n\n  @media (max-width: ${breakpointNum.bigtablet + 10}px) {\n    .signature {\n      margin-top: 1em;\n    }\n    margin-top: none;\n    position: unset;\n    max-width: none;\n    > * {\n      color: ${colors.green.green950};\n    }\n  }\n\n  @media (max-width: ${breakpointNum.mobile}px) {\n    padding: 8px;\n  }\n`\n\nexport const StyledImg = styled(GatsbyImage)``\n","import React from \"react\"\nimport { ImageData } from \"../../types\"\nimport * as S from \"./styled\"\nimport * as T from \"./../typography\"\n\ninterface HeroMainProps {\n  img: ImageData\n  content: {\n    quote: string\n    signature: string\n  }\n}\n\nconst HeroMain: React.FC<HeroMainProps> = ({ img, content }: HeroMainProps) => {\n  const { quote, signature } = content\n\n  return (\n    <S.Wrapper>\n      <S.TextWrapper>\n        <T.P1 $font=\"Caveat\">{quote}</T.P1>\n        <T.H3\n          className=\"signature\"\n          $font={\"Cedarville Cursive\"}\n          $textAlign={\"right\"}\n          dangerouslySetInnerHTML={{ __html: signature }}\n        />\n      </S.TextWrapper>\n      {img.image && (\n        <S.StyledImg\n          image={img.image}\n          alt={img.alt ?? \"\"}\n          style={{ borderRadius: \"8px\", marginTop: 4 }}\n        />\n      )}\n    </S.Wrapper>\n  )\n}\n\nexport default HeroMain\n","import { graphql, useStaticQuery, type HeadFC, type PageProps } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport DefaultLayout from \"../components/default-layout\"\nimport HeroMain from \"../components/hero-main\"\nimport { ImageData } from \"../types\"\n\nconst content = {\n  quote:\n    \"“Il Creato non è una proprietà di cui possiamo spadroneggiare a nostro piacimento; né, tanto meno, è una proprietà solo di alcuni, di pochi: il Creato è un dono, un dono meraviglioso che Dio ci ha dato perché ne abbiamo cura e lo utilizziamo a beneficio di tutti, sempre con grande rispetto e gratitudine.”\",\n  signature: 'Papa Francesco <span style=\"font-family: Caveat\"> XVI </span>',\n}\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allImageMetadataJson(filter: { tags: { in: [\"main\"] } }) {\n        nodes {\n          title\n          description\n          fileName\n          tags\n          copyright\n          alt\n        }\n      }\n      allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        nodes {\n          base\n          childImageSharp {\n            gatsbyImageData(\n              width: 1050\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n      }\n    }\n  `)\n\n  // Map metadata and image nodes\n  const metadata = data.allImageMetadataJson.nodes\n  const images = data.allFile.nodes\n\n  // Match images to metadata using the fileName\n  const filteredImages = metadata.map((meta: any) => {\n    const image = images.find((img: any) => img.base === meta.fileName)\n    return {\n      ...meta,\n      image: image ? getImage(image.childImageSharp) : null,\n    }\n  }) as ImageData[]\n  const coverImage = filteredImages.find(\n    img => img.fileName === \"Fioritura02.jpg\",\n  )\n\n  return (\n    <DefaultLayout>\n      {coverImage && <HeroMain content={content} img={coverImage} />}\n    </DefaultLayout>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Gruppo Natura Lentiai</title>\n"],"names":["Wrapper","styled","div","withConfig","displayName","componentId","breakpointNum","smalltablet","mobile","TextWrapper","colors","green","green100","medium","bigtablet","green950","StyledImg","GatsbyImage","_ref","_img$alt","img","content","quote","signature","React","S","T","$font","className","$textAlign","dangerouslySetInnerHTML","__html","image","alt","style","borderRadius","marginTop","IndexPage","data","useStaticQuery","metadata","allImageMetadataJson","nodes","images","allFile","coverImage","map","meta","find","base","fileName","getImage","childImageSharp","DefaultLayout","HeroMain","Head"],"sourceRoot":""}