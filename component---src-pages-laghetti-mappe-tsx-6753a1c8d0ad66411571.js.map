{"version":3,"file":"component---src-pages-laghetti-mappe-tsx-6753a1c8d0ad66411571.js","mappings":"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","sources":["webpack://site-gruppo-natura-lentiai/./src/components/image-with-credits/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/image-with-credits/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/helpers.tsx","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/helpers.tsx","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/map-laghetti/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/map-laghetti/index.tsx","webpack://site-gruppo-natura-lentiai/./src/data/paths/laghetti.ts","webpack://site-gruppo-natura-lentiai/./src/pages/laghetti/mappe.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport * as T from \"./../typography\"\n\nexport const ImgWrapper = styled.div<{\n  $maxWidth?: number\n  $maxHeight?: number\n  $minWidth?: number\n  $minHeight?: number\n}>`\n  text-align: center;\n  ${({ $maxWidth }) => ($maxWidth ? `max-width: ${$maxWidth}px;` : \"\")}\n  ${({ $maxHeight }) => ($maxHeight ? `max-width: ${$maxHeight}px;` : \"\")}\n  ${({ $minWidth }) => ($minWidth ? `min-width: ${$minWidth}px;` : \"\")}\n  ${({ $minHeight }) => ($minHeight ? `min-width: ${$minHeight}px;` : \"\")}\n`\n\nexport const ImageDescription = styled(T.P3)`\n  white-space: break-spaces;\n`\n","import { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\n\nconst ImageWithCredits = ({\n  title,\n  description,\n  alt,\n  image,\n  copyright,\n  minHeight,\n  minWidth,\n  maxHeight,\n  maxWidth,\n  noDescription,\n  noCopyright,\n}: {\n  title: string\n  description: string\n  alt: string\n  image: IGatsbyImageData\n  copyright: string | undefined\n  minWidth?: number\n  minHeight?: number\n  maxWidth?: number\n  maxHeight?: number\n  noDescription?: boolean\n  noCopyright?: boolean\n}) => (\n  <S.ImgWrapper\n    $maxHeight={maxHeight}\n    $maxWidth={maxWidth}\n    $minHeight={minHeight}\n    $minWidth={minWidth}\n  >\n    {title && <T.H3 dangerouslySetInnerHTML={{ __html: title }} />}\n    <GatsbyImage\n      image={image}\n      alt={alt}\n      style={{ borderRadius: \"8px\", marginTop: 4 }}\n    />\n    {noCopyright ? null : copyright ? (\n      <T.P4>Foto di {copyright}</T.P4>\n    ) : (\n      <T.P4>Autore sconosciuto</T.P4>\n    )}\n    {!noDescription && (\n      <S.ImageDescription\n        style={{\n          maxWidth: image.width,\n        }}\n        dangerouslySetInnerHTML={{ __html: description }}\n      />\n    )}\n  </S.ImgWrapper>\n)\n\nexport default ImageWithCredits\n","import styled, { keyframes } from \"styled-components\"\nimport { breakpoint, breakpointNum, colors } from \"../../styles\"\nimport * as T from \"./../typography\"\nimport { color } from \"framer-motion\"\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 32px;\n  justify-content: center;\n  @media (min-width: ${breakpointNum.bigtablet + 1}px) {\n    display: none;\n  }\n  @media (max-width: ${breakpointNum.tablet}px) {\n    padding: 24px;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    padding: 16px;\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const TwoWrapperMobile = styled.div`\n  @media (min-width: ${breakpointNum.bigtablet + 1}px) {\n    display: none;\n  }\n  min-height: 100px;\n`\n\nexport const ContinueReading = styled(T.P2)`\n  color: ${colors.green.green700};\n`\n\nexport const TextWrapper = styled.div<{ $isExpanded: boolean }>`\n  position: relative;\n  overflow: hidden;\n  max-height: ${({ $isExpanded }) => ($isExpanded ? \"2000px\" : \"4.5em\")};\n  @media (max-width: ${breakpointNum.mobile}px) {\n    max-height: ${({ $isExpanded }) => ($isExpanded ? \"2000px\" : \"6em\")};\n  }\n  transition: max-height 0.8s ease-in-out;\n`\n\nexport const TextContainer = styled.div`\n  position: relative;\n`\n\nexport const FadeOut = styled.div<{ $isExpanded: boolean; $isShort: boolean }>`\n  ${({ $isShort }) => $isShort && \"display:none;\"}\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 2em;\n  background: linear-gradient(to bottom, transparent, ${colors.green.green500});\n  pointer-events: none;\n\n  opacity: ${({ $isExpanded }) => ($isExpanded ? 0 : 1)};\n  transition: opacity 0.8s ease-in-out;\n`\n\nexport const ReadMoreWrapper = styled.div<{\n  $isExpanded: boolean\n  $isShort: boolean\n}>`\n  ${({ $isShort }) => $isShort && \"display:none;\"}\n  cursor: pointer;\n  position: absolute;\n  top: 1.3em;\n  z-index: 10;\n  justify-self: anchor-center;\n  ${({ $isExpanded }) => $isExpanded && \"position: unset;\"}\n\n  h3 {\n    color: ${colors.green.green950};\n    opacity: 0;\n    animation: fadeIn 1s ease-in-out forwards;\n    animation-delay: 0.5s;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media (min-width: ${breakpointNum.tablet + 1}px) {\n    top: 2em;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    top: 3.2em;\n  }\n`\n","import React, { useRef, useState } from \"react\"\nimport { ImageContentData, ImageData, TextContentData } from \"../../types\"\nimport ImageWithCredits from \"../image-with-credits\"\nimport * as T from \"../typography\"\nimport * as S from \"./styled\"\n\nexport const renderImage = (\n  content: ImageContentData,\n  images: ImageData[],\n  key: string,\n) => {\n  const filteredImages = content.content.map(imgFilename =>\n    images.find(img => img.fileName === imgFilename),\n  )\n  return (\n    <S.ImageWrapper key={key}>\n      {filteredImages.map((img, index) =>\n        img ? (\n          img.image && (\n            <ImageWithCredits\n              key={index}\n              title={img.title}\n              description={img.description}\n              alt={img.alt || img.description}\n              image={img.image}\n              copyright={img.copyright}\n              minHeight={content.minHeight}\n              minWidth={content.minWidth}\n              maxHeight={content.maxHeight}\n              maxWidth={content.maxWidth}\n              noDescription={content.noDescription}\n              noCopyright={content.noCopyright}\n            />\n          )\n        ) : (\n          <T.H2 key={`img-${index}`}>Image not found</T.H2>\n        ),\n      )}\n    </S.ImageWrapper>\n  )\n}\n\nconst renderTextInner =\n  (\n    size: string,\n    font: T.FontFamilies | undefined,\n    position: \"center\" | \"left\" | \"right\" | undefined,\n  ) =>\n  (text: string) => {\n    const addProps = {\n      $textAlign: position,\n      $font: font,\n      dangerouslySetInnerHTML: { __html: text },\n    }\n    switch (size) {\n      case \"h1\":\n        return <T.H1 {...addProps} />\n      case \"h2\":\n        return <T.H2 {...addProps} />\n      case \"h3\":\n        return <T.H3 {...addProps} />\n      case \"h4\":\n        return <T.H4 {...addProps} />\n      case \"h5\":\n        return <T.H5 {...addProps} />\n      case \"h6\":\n        return <T.H6 {...addProps} />\n      case \"h7\":\n        return <T.H7 {...addProps} />\n      case \"p1\":\n        return <T.P1 {...addProps} />\n      case \"p2\":\n        return <T.P2 {...addProps} />\n      case \"p3\":\n        return <T.P3 {...addProps} />\n      case \"p4\":\n        return <T.P1 {...addProps} />\n      case \"p5\":\n        return <T.P1 {...addProps} />\n      case \"note\":\n        return <T.Notes {...addProps} />\n      default:\n        return <T.H2>Text size not found</T.H2>\n    }\n  }\n\nexport const ExpandableText: React.FC<{\n  content: TextContentData\n  innerKey: string\n}> = ({ content, innerKey }) => {\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const theText = content.content.join(\" <br /> \")\n  if (!theText) return <T.H2 key={innerKey}>Text not found</T.H2>\n\n  const textRef = useRef<HTMLDivElement | null>(null)\n\n  const isShortText = theText.length <= 135\n\n  const { font, position, collapsible } = content\n  const textRenderer = renderTextInner(content.size, font, position)\n\n  if (collapsible === false)\n    return (\n      <React.Fragment key={innerKey}>{textRenderer(theText)}</React.Fragment>\n    )\n\n  return (\n    <S.TextWrapper $isExpanded={isExpanded} key={innerKey} ref={textRef}>\n      <S.TextContainer\n        onClick={() => {\n          setIsExpanded(true)\n        }}\n      >\n        {textRenderer(theText)}\n      </S.TextContainer>\n      <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n      <S.ReadMoreWrapper\n        $isExpanded={isExpanded}\n        $isShort={isShortText}\n        onClick={() => {\n          setIsExpanded(!isExpanded)\n        }}\n      >\n        <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n          {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n        </T.H3>\n      </S.ReadMoreWrapper>\n    </S.TextWrapper>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  DataJSONType,\n  ImageContentData,\n  ImageData,\n  TemplateTwoColumnsData,\n  TextContentData,\n} from \"../../types\"\nimport * as T from \"./../typography\"\nimport { renderImage, ExpandableText } from \"./helpers\"\nimport * as S from \"./styled\"\n\nconst renderComponents =\n  (images: ImageData[]) =>\n  (content: DataJSONType[number], key: Number | string): any => {\n    const keyString = key.toString()\n    switch (content.type) {\n      case \"image\":\n        const castedImgContent = content as ImageContentData\n        return renderImage(castedImgContent, images, keyString)\n\n      case \"text\":\n        const castedTextContent = content as TextContentData\n        return (\n          <ExpandableText\n            key={`expandable-${keyString}`}\n            content={castedTextContent}\n            innerKey={keyString}\n          />\n        )\n\n      case \"two-columns\": {\n        const castedTwoColsComponent = content as TemplateTwoColumnsData\n        const [leftComponents, rightComponents] = castedTwoColsComponent.content\n        return (\n          <S.TwoWrapperMobile key={keyString}>\n            {[...leftComponents, ...rightComponents].map((lc, idx) =>\n              renderComponents(images)(lc, `two-cols-seq-${keyString}-${idx}`),\n            )}\n          </S.TwoWrapperMobile>\n        )\n      }\n      default:\n        return <T.H1 key={keyString}>Content type Not Found</T.H1>\n    }\n  }\n\nconst MobileContentToComponent: React.FC<{\n  pageData: DataJSONType\n  images: ImageData[]\n}> = ({ pageData, images }) => {\n  return <S.MainWrapper>{pageData.map(renderComponents(images))}</S.MainWrapper>\n}\nexport default MobileContentToComponent\n","import styled from \"styled-components\"\nimport { breakpoint, breakpointNum } from \"../../styles\"\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 32px;\n  justify-content: center;\n  @media (max-width: ${breakpointNum.bigtablet}px) {\n    display: none;\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const TwoColsWrapper = styled.div`\n  display: flex;\n  @media (max-width: ${breakpoint.bigtablet}) {\n    display: none;\n  }\n  &:nth-child(odd) {\n    flex-direction: row;\n  }\n  &:nth-child(even) {\n    flex-direction: row-reverse;\n  }\n`\n\nexport const LeftTwoColsWrapper = styled.div`\n  flex: 1;\n  padding: 16px;\n  align-content: center;\n  justify-items: center;\n`\n\nexport const RightTwoColsWrapper = styled.div`\n  flex: 1;\n  padding: 16px;\n  align-content: center;\n  justify-items: center;\n`\n","import {\n  DataJSONType,\n  ImageContentData,\n  ImageData,\n  TemplateTwoColumnsData,\n  TextContentData,\n} from \"../../types\"\nimport ImageWithCredits from \"../image-with-credits\"\nimport * as S from \"./styled\"\nimport * as T from \"./../typography\"\nimport React, { Fragment } from \"react\"\n\nconst renderTextInner =\n  (\n    size: string,\n    font: T.FontFamilies | undefined,\n    position: \"center\" | \"left\" | \"right\" | undefined,\n  ) =>\n  (text: string) => {\n    const addProps = {\n      $textAlign: position,\n      $font: font,\n      dangerouslySetInnerHTML: { __html: text },\n    }\n    switch (size) {\n      case \"h1\":\n        return <T.H1 {...addProps} />\n      case \"h2\":\n        return <T.H2 {...addProps} />\n      case \"h3\":\n        return <T.H3 {...addProps} />\n      case \"h4\":\n        return <T.H4 {...addProps} />\n      case \"h5\":\n        return <T.H5 {...addProps} />\n      case \"h6\":\n        return <T.H6 {...addProps} />\n      case \"h7\":\n        return <T.H7 {...addProps} />\n      case \"p1\":\n        return <T.P1 {...addProps} />\n      case \"p2\":\n        return <T.P2 {...addProps} />\n      case \"p3\":\n        return <T.P3 {...addProps} />\n      case \"p4\":\n        return <T.P1 {...addProps} />\n      case \"p5\":\n        return <T.P1 {...addProps} />\n      case \"note\":\n        return <T.Notes {...addProps} />\n      default:\n        return <T.H2>Text size not found</T.H2>\n    }\n  }\n\nexport const renderComponents =\n  (images: ImageData[]) =>\n  (content: DataJSONType[number], key: Number | string): any => {\n    const keyString = key.toString()\n\n    switch (content.type) {\n      case \"image\":\n        const castedImgContent = content as ImageContentData\n        const filteredImages = castedImgContent.content.map(imgFilename =>\n          images.find(img => img.fileName === imgFilename),\n        )\n        return (\n          <S.ImageWrapper key={keyString}>\n            {filteredImages.map((img, index) =>\n              img ? (\n                img.image && (\n                  <ImageWithCredits\n                    key={index}\n                    title={img.title}\n                    description={img.description}\n                    alt={img.alt || img.description}\n                    image={img.image}\n                    copyright={img.copyright}\n                    minHeight={content.minHeight}\n                    minWidth={content.minWidth}\n                    maxHeight={content.maxHeight}\n                    maxWidth={content.maxWidth}\n                    noDescription={content.noDescription}\n                    noCopyright={content.noCopyright}\n                  />\n                )\n              ) : (\n                <T.H2 key={`img-${index}`}>Image not found</T.H2>\n              ),\n            )}\n          </S.ImageWrapper>\n        )\n      case \"text\":\n        const castedTextContent = content as TextContentData\n        const theText = castedTextContent.content.join(\" <br /> \")\n        if (!theText) return <T.H2 key={keyString}>Text not found</T.H2>\n\n        const { font, position, size } = castedTextContent\n        const textRenderer = renderTextInner(size, font, position)\n        return <Fragment key={keyString}>{textRenderer(theText)}</Fragment>\n\n      case \"two-columns\": {\n        const castedTwoColsComponent = content as TemplateTwoColumnsData\n        const [leftComponents, rightComponents] = castedTwoColsComponent.content\n        return (\n          <S.TwoColsWrapper key={keyString}>\n            <S.LeftTwoColsWrapper>\n              {leftComponents.map((lc, idx) =>\n                renderComponents(images)(lc, `two-cols-left-${idx}`),\n              )}\n            </S.LeftTwoColsWrapper>\n            <S.RightTwoColsWrapper>\n              {rightComponents.map((lc, idx) =>\n                renderComponents(images)(lc, `two-cols-right-${idx}`),\n              )}\n            </S.RightTwoColsWrapper>\n          </S.TwoColsWrapper>\n        )\n      }\n      default:\n        return <T.H1 key={keyString}>Content type Not Found</T.H1>\n    }\n  }\n","import React from \"react\"\nimport { DataJSONType, ImageData } from \"../../types\"\nimport { renderComponents } from \"./helpers\"\nimport * as S from \"./styled\"\n\nconst ContentToComponent: React.FC<{\n  pageData: DataJSONType\n  images: ImageData[]\n}> = ({ pageData, images }) => (\n  <S.MainWrapper>{pageData.map(renderComponents(images))}</S.MainWrapper>\n)\n\nexport default ContentToComponent\n","import styled from \"styled-components\"\nimport { breakpointNum, colors } from \"../../styles\"\nimport { Popup } from \"react-leaflet\"\n\nexport const Wrapper = styled.div`\n  padding: 16px;\n  border-radius: 8px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`\n\nexport const LeafletPopupStyled = styled(Popup)`\n  .leaflet-popup-tip-container {\n    margin: 0;\n  }\n`\n\nexport const Legend = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 24px;\n  background-color: ${colors.green.green200};\n  border-radius: 8px;\n  column-gap: 1em;\n  justify-content: center;\n  @media (max-width: ${breakpointNum.tablet}px) {\n    justify-content: space-between;\n    padding: 16px;\n    flex-wrap: wrap;\n    row-gap: 1em;\n  }\n`\n\nexport const LegendElement = styled.div<{ $isHovered: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  ${({ $isHovered }) => ($isHovered ? \"opacity: 1;\" : \"opacity: 0.4;\")}\n  transition: all 0.5s;\n  > h3 {\n    margin-top: 0px;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    gap: 4px;\n  }\n`\n\nexport const Dot = styled.div<{ $color: string }>`\n  width: 12px;\n  height: 12px;\n  ${({ $color }) => `background-color: ${$color};`}\n  border-radius: 50%;\n`\n","import \"leaflet-css\"\nimport React, { useEffect, useState } from \"react\"\nimport { MapContainer, Marker, TileLayer } from \"react-leaflet\"\nimport { Location } from \"../../types\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\n\nimport { Marker as MarkerLeaflet, icon } from \"leaflet\"\nimport ExtendedPolyline from \"../custom-polyline\"\n\n//// MARKERS RELATED CODE\nimport markerIcon2x from \"./../../markers/default/marker-icon-2x.png\"\nimport markerIcon from \"./../../markers/default/marker-icon.png\"\nimport markerShadow from \"./../../markers/default/marker-shadow.png\"\n\nimport parkMarker from \"./../../markers/parking/park-marker-32x32.png\"\nimport parkMarker2x from \"./../../markers/parking/park-marker-64x64.png\"\n\nconst piazzaCenter = [46.04523644005277, 12.023334355216095] as LocationMarker\n\ntype LocationMarker = [lat: number, lon: number]\ninterface ComponentProps {\n  markers: Location[]\n  paths: {\n    legend: string\n    key: string\n    path: [number, number][]\n    color: string\n  }[]\n}\n\nconst MapComponent: React.FC<ComponentProps> = ({ markers, paths }) => {\n  const [isClient, setIsClient] = useState(false)\n  const [hoveredPath, setHoveredPath] = useState(\"\")\n\n  // Enable rendering on the client side\n  useEffect(() => {\n    setIsClient(true)\n  }, [])\n\n  if (!isClient) {\n    return <p>Loading map...</p>\n  }\n\n  ///////// MARKERS RELATED STUFF\n  const DefaultIcon = icon({\n    iconUrl: markerIcon,\n    iconRetinaUrl: markerIcon2x,\n    shadowUrl: markerShadow,\n    iconSize: [25, 41],\n    iconAnchor: [12, 41],\n  })\n  MarkerLeaflet.prototype.options.icon = DefaultIcon\n  const ParkIcon = icon({\n    iconUrl: parkMarker,\n    iconRetinaUrl: parkMarker2x,\n    shadowUrl: markerShadow,\n    iconSize: [33, 41],\n    iconAnchor: [12, 41],\n  })\n\n  const mapToMarker = (IconType?: string) => {\n    switch (IconType) {\n      case \"park\":\n        return ParkIcon\n      default:\n        return DefaultIcon\n    }\n  }\n  //////////////////////////////////////\n\n  return (\n    <S.Wrapper>\n      <S.Legend>\n        {paths.map(path => (\n          <S.LegendElement\n            key={path.key}\n            $isHovered={!hoveredPath || hoveredPath === path.key}\n            onMouseOver={() => setHoveredPath(path.key)}\n            onMouseOut={() => setHoveredPath(\"\")}\n          >\n            <S.Dot $color={path.color} />\n            <T.H3>{path.legend}</T.H3>\n          </S.LegendElement>\n        ))}\n      </S.Legend>\n      <MapContainer\n        style={{ height: \"500px\", width: \"100%\" }}\n        center={piazzaCenter}\n        zoom={14}\n        scrollWheelZoom={true}\n      >\n        <TileLayer\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n        {markers.map((marker, idx) => (\n          <Marker\n            key={`marker-${idx}`}\n            position={[marker.lat, marker.lon]}\n            icon={mapToMarker(marker.iconType)}\n          >\n            <S.LeafletPopupStyled offset={[-15, 20]}>\n              {marker.name}\n              <a\n                href={`https://www.google.com/maps?q=${marker.lat},${marker.lon}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                style={{ color: \"blue\", textDecoration: \"underline\" }}\n              >\n                <br />\n                Apri Google Maps\n              </a>\n            </S.LeafletPopupStyled>\n          </Marker>\n        ))}\n\n        {/* Static paths */}\n        {paths.map(path => (\n          <ExtendedPolyline\n            eventHandlers={{\n              mouseover: _ => {\n                setHoveredPath(path.key)\n              },\n              mouseout: _ => {\n                setHoveredPath(\"\")\n              },\n              click: _ => {\n                setHoveredPath(path.key)\n              },\n            }}\n            pathOptions={{\n              weight: path.key === hoveredPath ? 8 : 4,\n              dashArray: path.key === hoveredPath ? \"1, 0\" : \"1, 5\",\n            }}\n            key={path.key}\n            positions={path.path as [number, number][]}\n            color={path.color}\n            opacity={0.8}\n            hitTolerance={1000} // Expands the tap/click area // NOT WORKING\n          />\n        ))}\n\n        {/* Dynamic paths */}\n        {/* {pathCoordinates.length >= 2 && (\n          <RouteControl\n            waypoints={pathCoordinates}\n          />\n        )} */}\n      </MapContainer>\n    </S.Wrapper>\n  )\n}\n\n/////// CODE TO RENDER DYNAMIC COMPONENTS\n// Route Control Component for Road Path\n// import \"leaflet-routing-machine\"\n\n// Extend RoutingControlOptions to include createMarker\n// interface ExtendedRoutingControlOptions\n//   extends L.Routing.RoutingControlOptions {\n//   createMarker?: (\n//     i: number,\n//     waypoint: L.Routing.Waypoint,\n//     n: number,\n//   ) => L.Marker | null\n// }\n\n// const RouteControl: React.FC<{ waypoints: [number, number][] }> = ({\n//   waypoints,\n// }) => {\n//   const map = useMap()\n//   const routingControlRef = React.useRef<L.Routing.Control | null>(null)\n\n//   useEffect(() => {\n//     if (typeof window === \"undefined\" || waypoints.length < 2) return\n\n//     const routingControl = L.Routing.control({\n//       waypoints: waypoints.map(coords => L.latLng(coords[0], coords[1])),\n//       routeWhileDragging: false,\n//       show: false,\n//       addWaypoints: false,\n//       createMarker: () => null, // Prevent default markers from being added\n//       router: new L.Routing.OSRMv1({\n//         serviceUrl: \"https://router.project-osrm.org/route/v1\", // OSRM service URL\n//         profile: \"foot\", // Use the 'foot' profile for pedestrian routes\n//       }),\n//     } as ExtendedRoutingControlOptions).addTo(map)\n\n//     routingControlRef.current = routingControl\n\n//     // Hide the summary box after the control is added\n//     const controlContainer = routingControl.getContainer()\n//     if (controlContainer) {\n//       controlContainer.style.display = \"none\"\n//     }\n\n//     return () => {\n//       map.removeControl(routingControl)\n//       routingControlRef.current = null\n//     }\n//   }, [map, waypoints])\n\n//   return null\n// }\n\nexport default MapComponent\n","import { colors } from \"../../styles\"\n\nconst paths = [\n  {\n    legend: \"Parcheggio - Inizio percorso\",\n    key: \"park-laghetti-start\",\n    path: [\n      [46.04685, 12.02487],\n      [46.04637, 12.02511],\n      [46.04627, 12.02529],\n      [46.04627, 12.02547],\n      [46.04636, 12.02612],\n      [46.04603, 12.02633],\n      [46.04559, 12.02653],\n      [46.04515, 12.02685],\n      [46.04518, 12.0271],\n      [46.04521, 12.02727],\n      [46.04529, 12.02762],\n      [46.04533, 12.02764],\n      [46.04545, 12.02786],\n      [46.04558, 12.02794],\n      [46.04567, 12.02795],\n      [46.0457, 12.02783],\n      [46.04571, 12.02769],\n      [46.04571, 12.0276],\n      [46.04572, 12.02747],\n      [46.04576, 12.0274],\n      [46.04599, 12.02733],\n      [46.04625, 12.02724],\n      [46.04644, 12.02711],\n      [46.04678, 12.02703],\n      [46.04697, 12.02695],\n      [46.04716, 12.02694],\n      [46.04752, 12.02676],\n      [46.04779, 12.02666],\n      [46.048, 12.02661],\n      [46.04817, 12.02653],\n      [46.04827, 12.02653],\n      [46.04837, 12.02656],\n      [46.04845, 12.02656],\n      [46.04865, 12.02643],\n      [46.04881, 12.02638],\n      [46.04921, 12.02631],\n      [46.04941, 12.02632],\n      [46.04946, 12.02637],\n      [46.04948, 12.02645],\n      [46.04948, 12.02688],\n      [46.04951, 12.02655],\n      [46.04955, 12.02649],\n    ] as [number, number][],\n    color: colors.paths.tomato,\n  },\n  {\n    legend: 'Percorso \"Laghetti della Rimonta\"',\n    key: \"laghetti-round-trip\",\n    path: [\n      [46.04947, 12.02641],\n      [46.04948, 12.02645],\n      [46.04948, 12.02688],\n      [46.04951, 12.02655],\n      [46.0496, 12.02642],\n      [46.04973, 12.02623],\n      [46.04985, 12.02626],\n      [46.04995, 12.02632],\n      [46.05012, 12.02632],\n      [46.05021, 12.0262],\n      [46.0503, 12.02608],\n      [46.05039, 12.02602],\n      [46.05077, 12.0257],\n      [46.05113, 12.02559],\n      [46.05128, 12.02565],\n      [46.0514, 12.02565],\n      [46.05151, 12.02557],\n      [46.05183, 12.02532],\n      [46.05197, 12.02513],\n      [46.05209, 12.02506],\n      [46.05224, 12.02483],\n      [46.05228, 12.02465],\n      [46.05235, 12.02453],\n      [46.05248, 12.02445],\n      [46.05258, 12.0244],\n      [46.05271, 12.02436],\n      [46.05275, 12.02441],\n      [46.05279, 12.02453],\n      [46.05284, 12.02458],\n      [46.05302, 12.02448],\n      [46.05305, 12.02445],\n      [46.05312, 12.02427],\n      [46.05318, 12.02421],\n      [46.0533, 12.02399],\n      [46.05339, 12.02399],\n      [46.05349, 12.02393],\n      [46.05357, 12.02389],\n      [46.05367, 12.02387],\n      [46.05375, 12.02381],\n      [46.05384, 12.0238],\n      [46.05388, 12.0239],\n      [46.05398, 12.024],\n      [46.05403, 12.02411],\n      [46.05416, 12.02429],\n      [46.0542, 12.0244],\n      [46.05441, 12.02467],\n      [46.0545, 12.02476],\n      [46.05454, 12.02488],\n      [46.05462, 12.02494],\n      [46.05462, 12.02508],\n      [46.05469, 12.0253],\n      [46.05471, 12.02535],\n      [46.05472, 12.02545],\n      [46.05466, 12.02574],\n      [46.05464, 12.02586],\n      [46.05464, 12.02601],\n      [46.05466, 12.02614],\n      [46.05461, 12.02627],\n      [46.05457, 12.02638],\n      [46.05449, 12.02648],\n      [46.05448, 12.02662],\n      [46.0545, 12.02675],\n      [46.05457, 12.02702],\n      [46.05473, 12.02714],\n      [46.05478, 12.02726],\n      [46.05484, 12.02753],\n      [46.05484, 12.02758],\n      [46.05484, 12.02758],\n      [46.05484, 12.02764],\n      [46.05486, 12.02772],\n      [46.055, 12.02798],\n      [46.05502, 12.02814],\n      [46.0551, 12.02834],\n      [46.0552, 12.02872],\n      [46.05523, 12.0289],\n      [46.05524, 12.02903],\n      [46.05507, 12.0291],\n      [46.0548, 12.02927],\n      [46.05472, 12.0293],\n      [46.05462, 12.02929],\n      [46.05455, 12.02938],\n      [46.05452, 12.02953],\n      [46.05456, 12.02979],\n      [46.05462, 12.03006],\n      [46.0546, 12.03022],\n      [46.05456, 12.03048],\n      [46.0545, 12.03058],\n      [46.05442, 12.03064],\n      [46.05428, 12.03042],\n      [46.05412, 12.03027],\n      [46.05408, 12.03014],\n      [46.054, 12.03008],\n      [46.0539, 12.02995],\n      [46.05386, 12.02989],\n      [46.05374, 12.02977],\n      [46.0536, 12.02965],\n      [46.05352, 12.02953],\n      [46.05338, 12.02938],\n      [46.05333, 12.02923],\n      [46.05324, 12.02918],\n      [46.05309, 12.02908],\n      [46.053, 12.029],\n      [46.05294, 12.02889],\n      [46.05285, 12.02883],\n      [46.05266, 12.02881],\n      [46.05248, 12.02877],\n      [46.05239, 12.02878],\n      [46.05231, 12.02882],\n      [46.05202, 12.0288],\n      [46.05192, 12.02874],\n      [46.05189, 12.02861],\n      [46.05189, 12.02848],\n      [46.05178, 12.02834],\n      [46.0517, 12.02821],\n      [46.05153, 12.02809],\n      [46.0514, 12.028],\n      [46.05122, 12.02791],\n      [46.05098, 12.02767],\n      [46.05077, 12.02753],\n      [46.05059, 12.02739],\n      [46.05036, 12.0273],\n      [46.05019, 12.0272],\n      [46.05012, 12.02714],\n      [46.04952, 12.02689],\n    ] as [number, number][],\n    color: colors.paths.liver,\n  },\n]\n\nexport default paths\n","import { graphql, useStaticQuery, type HeadFC, type PageProps } from \"gatsby\"\nimport { getImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport dataJSON from \"../../../content/laghetti/mappe.json\"\nimport DefaultLayout from \"../../components/default-layout\"\nimport ContentToComponent from \"../../components/pagedata-text-components\"\nimport { DataJSONType, ImageData, Location } from \"../../types\"\nimport * as T from \"./../../components/typography\"\nimport MapComponent from \"../../components/map-laghetti\"\nimport MobileContentToComponent from \"../../components/mobile-pagedata-text-components\"\nimport paths from \"./../../data/paths/laghetti\"\nimport AccessWarnings from \"../../components/access-warnings\"\n\nconst markersMap: Location[] = [\n  {\n    type: \"start\",\n    name: \"Inizio del percorso\",\n    lat: 46.04923742844764,\n    lon: 12.02636613390803,\n  },\n  {\n    type: \"park\",\n    iconType: \"park\",\n    name: \"Parcheggio\",\n    lat: 46.046873575356855,\n    lon: 12.024898230581327,\n  },\n]\n\nconst LaghettiMappePage: React.FC<PageProps> = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allImageMetadataJson(filter: { tags: { in: [\"laghetti-mappe\"] } }) {\n        nodes {\n          title\n          description\n          fileName\n          tags\n          copyright\n          alt\n        }\n      }\n      allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        nodes {\n          base\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n      }\n    }\n  `)\n\n  const content = dataJSON.mappe as DataJSONType\n  if (!content)\n    return (\n      <DefaultLayout>\n        <T.H1>Contenuto non trovato!</T.H1>\n      </DefaultLayout>\n    )\n\n  // Map metadata and image nodes\n  const metadata = data.allImageMetadataJson.nodes\n  const images = data.allFile.nodes\n\n  // Match images to metadata using the fileName\n  const filteredImages = metadata.map((meta: any) => {\n    const image = images.find((img: any) => img.base === meta.fileName)\n    return {\n      ...meta,\n      image: image ? getImage(image.childImageSharp) : null,\n    }\n  }) as ImageData[]\n\n  return (\n    <DefaultLayout>\n      <ContentToComponent pageData={content} images={filteredImages} />\n      <MobileContentToComponent pageData={content} images={filteredImages} />\n      <AccessWarnings type=\"laghetti\" />\n      <MapComponent markers={markersMap} paths={paths} />\n    </DefaultLayout>\n  )\n}\n\nexport default LaghettiMappePage\n\nexport const Head: HeadFC = () => <title>Laghetti della Rimonta - Mappe</title>\n"],"names":["ImgWrapper","styled","div","withConfig","displayName","componentId","_ref","$maxWidth","_ref2","$maxHeight","_ref3","$minWidth","_ref4","$minHeight","ImageDescription","T","title","description","alt","image","copyright","minHeight","minWidth","maxHeight","maxWidth","noDescription","noCopyright","React","S","dangerouslySetInnerHTML","__html","GatsbyImage","style","borderRadius","marginTop","width","MainWrapper","breakpointNum","bigtablet","tablet","mobile","ImageWrapper","TwoWrapperMobile","TextWrapper","colors","green","green700","$isExpanded","TextContainer","FadeOut","$isShort","green500","ReadMoreWrapper","_ref5","_ref6","green950","ExpandableText","content","innerKey","isExpanded","setIsExpanded","useState","theText","join","key","textRef","useRef","isShortText","length","font","position","collapsible","textRenderer","renderTextInner","size","text","addProps","$textAlign","$font","ref","onClick","renderComponents","images","keyString","toString","type","renderImage","filteredImages","map","imgFilename","find","img","fileName","index","ImageWithCredits","castedTextContent","castedTwoColsComponent","leftComponents","rightComponents","concat","_toConsumableArray","lc","idx","pageData","TwoColsWrapper","breakpoint","LeftTwoColsWrapper","RightTwoColsWrapper","Fragment","Wrapper","LeafletPopupStyled","Popup","Legend","green200","LegendElement","$isHovered","Dot","$color","piazzaCenter","markers","paths","isClient","setIsClient","hoveredPath","setHoveredPath","useEffect","DefaultIcon","icon","iconUrl","markerIcon","iconRetinaUrl","markerIcon2x","shadowUrl","markerShadow","iconSize","iconAnchor","MarkerLeaflet","prototype","options","ParkIcon","parkMarker","parkMarker2x","path","onMouseOver","onMouseOut","color","legend","MapContainer","height","center","zoom","scrollWheelZoom","TileLayer","attribution","url","marker","Marker","lat","lon","IconType","iconType","offset","name","href","target","rel","textDecoration","ExtendedPolyline","eventHandlers","mouseover","_","mouseout","click","pathOptions","weight","dashArray","positions","opacity","hitTolerance","tomato","liver","markersMap","LaghettiMappePage","data","useStaticQuery","dataJSON","DefaultLayout","metadata","allImageMetadataJson","nodes","allFile","meta","base","getImage","childImageSharp","ContentToComponent","MobileContentToComponent","AccessWarnings","MapComponent","Head"],"sourceRoot":""}