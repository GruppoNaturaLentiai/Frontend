{"version":3,"file":"component---src-pages-laghetti-index-tsx-92a4aa97217cd4f39b19.js","mappings":"mOAGO,MAAMA,EAAUC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAVJ,CAAU,wEAOpBK,EAAgBL,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAVJ,CAAU,oNAGjBM,EAAAA,GAAOC,MAAMC,SAMXF,EAAAA,GAAOC,MAAME,SAGbH,EAAAA,GAAOC,MAAMG,UCFrC,MAVmBC,IAAA,IAAC,GAAEC,EAAE,MAAEC,GAAwBF,EAAA,OAChDG,EAAAA,cAACC,EAAS,KACRD,EAAAA,cAACE,EAAAA,KAAI,CAACC,MAAO,CAAEC,eAAgB,QAAUN,GAAIA,GAC3CE,EAAAA,cAACC,EAAe,KACdD,EAAAA,cAACK,EAAAA,GAAI,KAAEN,KAGD,C,4/ECkFd,MAxF0CO,KACxC,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cA2BtBC,EAAUC,EAAAA,EAChB,IAAKD,EACH,OACET,EAAAA,cAACW,EAAAA,EAAa,KACZX,EAAAA,cAACK,EAAAA,GAAI,KAAC,2BAKZ,MAAMO,EAAWL,EAAKM,qBAAqBC,MACrCC,EAASR,EAAKS,QAAQF,MAGtBG,EAAiBL,EAASM,KAAKC,IACnC,MAAMC,EAAQL,EAAOM,MAAMC,GAAaA,EAAIC,OAASJ,EAAKK,WAC1D,MAAO,IACFL,EACHC,MAAOA,GAAQK,EAAAA,EAAAA,GAASL,EAAMM,iBAAmB,KAClD,IAEGC,GAAUF,EAAAA,EAAAA,GACdV,EAAOM,MAAMC,GAA0B,yBAAbA,EAAIC,OAC3BG,iBAECE,GAAYH,EAAAA,EAAAA,GAChBV,EAAOM,MAAMC,GAA0B,yBAAbA,EAAIC,OAC3BG,iBAGL,OACE1B,EAAAA,cAACW,EAAAA,EAAa,KACZX,EAAAA,cAAA,OAAKG,MAAO,CAAE0B,QAAS,KACrB7B,EAAAA,cAAA,OAAKG,MAAO,CAAE2B,YAAa,WACxBH,GACC3B,EAAAA,cAAC+B,EAAAA,EAAW,CACVX,MAAOO,EACPK,IAAK,yDACL7B,MAAO,CAAE8B,aAAc,MAAOC,UAAW,EAAGC,SAAU,QAG1DnC,EAAAA,cAACK,EAAAA,GAAI,CAAC+B,WAAW,UAAS,2BAE5BpC,EAAAA,cAACqC,EAAAA,EAAkB,CAACC,SAAU7B,EAASM,OAAQE,IAC/CjB,EAAAA,cAACuC,EAAAA,EAAwB,CAACD,SAAU7B,EAASM,OAAQE,IACrDjB,EAAAA,cAACwC,EAAAA,EAAU,CAAC1C,GAAG,QAAQC,MAAM,iBAC7BC,EAAAA,cAAA,OAAKG,MAAO,CAAE2B,YAAa,WACxBF,GACC5B,EAAAA,cAAC+B,EAAAA,EAAW,CACVX,MAAOQ,EACPI,IAAK,mDACL7B,MAAO,CAAE8B,aAAc,MAAOC,UAAW,EAAGC,SAAU,QAG1DnC,EAAAA,cAACK,EAAAA,GAAI,CAAC+B,WAAW,UAAS,4BAGhB,EAMb,MAAMK,EAAeA,IAC1BzC,EAAAA,cAAA,aAAO,iD","sources":["webpack://site-gruppo-natura-lentiai/./src/components/button-link/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/button-link/index.tsx","webpack://site-gruppo-natura-lentiai/./src/pages/laghetti/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { colors } from \"../../styles\"\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`\n\nexport const ButtonWrapper = styled.div`\n  margin: 0 2em 2em 2em;\n  text-align: center;\n  background-color: ${colors.green.green400};\n  padding: 0.8em;\n  max-width: 125px;\n  border-radius: 8px;\n  transition: all 0.5s;\n  &:hover {\n    background-color: ${colors.green.green500};\n  }\n  &:active {\n    background-color: ${colors.green.green600};\n  }\n  > p {\n    margin-top: 0;\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\n\ninterface ButtonLinkProps {\n  to: string\n  label: string\n}\n\nconst ButtonLink = ({ to, label }: ButtonLinkProps) => (\n  <S.Wrapper>\n    <Link style={{ textDecoration: \"none\" }} to={to}>\n      <S.ButtonWrapper>\n        <T.P2>{label}</T.P2>\n      </S.ButtonWrapper>\n    </Link>\n  </S.Wrapper>\n)\n\nexport default ButtonLink\n","import { graphql, useStaticQuery, type HeadFC, type PageProps } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport dataJSON from \"../../../content/laghetti/index.json\"\nimport ButtonLink from \"../../components/button-link\"\nimport DefaultLayout from \"../../components/default-layout\"\nimport MobileContentToComponent from \"../../components/mobile-pagedata-text-components\"\nimport ContentToComponent from \"../../components/pagedata-text-components\"\nimport { DataJSONType, ImageData } from \"../../types\"\nimport * as T from \"./../../components/typography\"\n\nconst LaghettiPage: React.FC<PageProps> = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allImageMetadataJson(filter: { tags: { in: [\"laghetti-main\"] } }) {\n        nodes {\n          title\n          description\n          fileName\n          tags\n          copyright\n          alt\n        }\n      }\n      allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        nodes {\n          base\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n      }\n    }\n  `)\n\n  const content = dataJSON.index as DataJSONType\n  if (!content)\n    return (\n      <DefaultLayout>\n        <T.H1>Contenuto non trovato!</T.H1>\n      </DefaultLayout>\n    )\n\n  // Map metadata and image nodes\n  const metadata = data.allImageMetadataJson.nodes\n  const images = data.allFile.nodes\n\n  // Match images to metadata using the fileName\n  const filteredImages = metadata.map((meta: any) => {\n    const image = images.find((img: any) => img.base === meta.fileName)\n    return {\n      ...meta,\n      image: image ? getImage(image.childImageSharp) : null,\n    }\n  }) as ImageData[]\n  const coverUp = getImage(\n    images.find((img: any) => img.base === \"rimonta-cover-01.jpg\")\n      .childImageSharp,\n  )\n  const coverDown = getImage(\n    images.find((img: any) => img.base === \"rimonta-cover-02.jpg\")\n      .childImageSharp,\n  )\n\n  return (\n    <DefaultLayout>\n      <div style={{ padding: 16 }}>\n        <div style={{ justifySelf: \"center\" }}>\n          {coverUp && (\n            <GatsbyImage\n              image={coverUp}\n              alt={\"Una passerella in legno con dietro il torrente Rimonta\"}\n              style={{ borderRadius: \"8px\", marginTop: 4, maxWidth: 1200 }}\n            />\n          )}\n          <T.P4 $textAlign=\"center\">Foto di Walter Argenta</T.P4>\n        </div>\n        <ContentToComponent pageData={content} images={filteredImages} />\n        <MobileContentToComponent pageData={content} images={filteredImages} />\n        <ButtonLink to=\"mappe\" label=\"Vai a mappe!\" />\n        <div style={{ justifySelf: \"center\" }}>\n          {coverDown && (\n            <GatsbyImage\n              image={coverDown}\n              alt={\"Un panorama invernale dei laghetti della Rimonta\"}\n              style={{ borderRadius: \"8px\", marginTop: 4, maxWidth: 1200 }}\n            />\n          )}\n          <T.P4 $textAlign=\"center\">Foto di Walter Argenta</T.P4>\n        </div>\n      </div>\n    </DefaultLayout>\n  )\n}\n\nexport default LaghettiPage\n\nexport const Head: HeadFC = () => (\n  <title>Gruppo Natura Lentiai - Laghetti della Rimonta</title>\n)\n"],"names":["Wrapper","styled","div","withConfig","displayName","componentId","ButtonWrapper","colors","green","green400","green500","green600","_ref","to","label","React","S","Link","style","textDecoration","T","LaghettiPage","data","useStaticQuery","content","dataJSON","DefaultLayout","metadata","allImageMetadataJson","nodes","images","allFile","filteredImages","map","meta","image","find","img","base","fileName","getImage","childImageSharp","coverUp","coverDown","padding","justifySelf","GatsbyImage","alt","borderRadius","marginTop","maxWidth","$textAlign","ContentToComponent","pageData","MobileContentToComponent","ButtonLink","Head"],"sourceRoot":""}