{"version":3,"file":"681b802ae0825e84809df79c39965e4681b137cb-008ef665b4380ad3c705.js","mappings":"yNAGO,MAAMA,EAAaC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,uCAOhCK,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAAMC,EAAY,cAAcA,OAAiB,EAAE,IACjEC,IAAA,IAAC,WAAEC,GAAYD,EAAA,OAAMC,EAAa,cAAcA,OAAkB,EAAE,IACpEC,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAAMC,EAAY,cAAcA,OAAiB,EAAE,IACjEC,IAAA,IAAC,WAAEC,GAAYD,EAAA,OAAMC,EAAa,cAAcA,OAAkB,EAAE,IAG3DC,GAAmBb,EAAAA,EAAAA,SAAOc,EAAAA,IAAKZ,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAZJ,CAAY,+BC0C5C,MArDyBK,IAAA,IAAC,MACxBU,EAAK,YACLC,EAAW,IACXC,EAAG,MACHC,EAAK,UACLC,EAAS,UACTC,EAAS,SACTC,EAAQ,UACRC,EAAS,SACTC,EAAQ,cACRC,EAAa,YACbC,GAaDpB,EAAA,OACCqB,EAAAA,cAACC,EAAY,CACXnB,WAAYc,EACZhB,UAAWiB,EACXX,WAAYQ,EACZV,UAAWW,GAEXK,EAAAA,cAACZ,EAAAA,GAAI,CAACc,wBAAyB,CAAEC,OAAQd,KACzCW,EAAAA,cAACI,EAAAA,EAAW,CACVZ,MAAOA,EACPD,IAAKA,EACLc,MAAO,CAAEC,aAAc,MAAOC,UAAW,KAE1CR,EAAc,KAAON,EACpBO,EAAAA,cAACZ,EAAAA,GAAI,KAAC,WAASK,GAEfO,EAAAA,cAACZ,EAAAA,GAAI,KAAC,uBAENU,GACAE,EAAAA,cAACC,EAAkB,CACjBI,MAAO,CACLR,SAAUL,EAAMgB,OAElBN,wBAAyB,CAAEC,OAAQb,KAG1B,C,uHClDV,MAAMmB,EAAcnC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,0MAMdoC,EAAAA,GAAcC,UAAY,EAG1BD,EAAAA,GAAcE,OAGdF,EAAAA,GAAcG,QAKxBC,EAAexC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,kEAOzByC,EAAmBzC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,2BAAAC,YAAA,gBAAVJ,CAAU,6DACnBoC,EAAAA,GAAcC,UAAY,GAUpCK,IAJkB1C,EAAAA,EAAAA,SAAOc,EAAAA,IAAKZ,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAZJ,CAAY,eAChC2C,EAAAA,GAAOC,MAAMC,UAGG7C,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,uIAGrBK,IAAA,IAAC,YAAEyC,GAAazC,EAAA,OAAMyC,EAAc,SAAW,OAAO,GAC/CV,EAAAA,GAAcG,QACnBhC,IAAA,IAAC,YAAEuC,GAAavC,EAAA,OAAMuC,EAAc,SAAW,KAAK,KAKzDC,EAAgB/C,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAVJ,CAAU,wBAI1BgD,EAAUhD,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAVJ,CAAU,yLAC7BS,IAAA,IAAC,SAAEwC,GAAUxC,EAAA,OAAKwC,GAAY,eAAe,GAMON,EAAAA,GAAOC,MAAMM,UAGxDvC,IAAA,IAAC,YAAEmC,GAAanC,EAAA,OAAMmC,EAAc,EAAI,CAAC,IAIzCK,EAAkBnD,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAVJ,CAAU,4SAIrCoD,IAAA,IAAC,SAAEH,GAAUG,EAAA,OAAKH,GAAY,eAAe,IAM7CI,IAAA,IAAC,YAAEP,GAAaO,EAAA,OAAKP,GAAe,kBAAkB,GAG7CH,EAAAA,GAAOC,MAAMU,SAeHlB,EAAAA,GAAcE,OAAS,EAGvBF,EAAAA,GAAcG,QCvF/BgB,EACJA,CACEC,EACAC,EACAC,IAEF,CAACC,EAA+BC,KAC9B,MAAMC,EAAYD,EAAIE,WACtB,OAAQH,EAAQI,MACd,IAAK,QAEH,MCjBmBC,EACzBL,EACAH,EACAI,KAEA,MAAMK,EAAiBN,EAAQA,QAAQO,KAAIC,GACzCX,EAAOY,MAAKC,GAAOA,EAAIC,WAAaH,MAEtC,OACEzC,EAAAA,cAACC,EAAc,CAACiC,IAAKA,GAClBK,EAAeC,KAAI,CAACG,EAAKE,IACxBF,EACEA,EAAInD,OACFQ,EAAAA,cAAC8C,EAAAA,EAAgB,CACfZ,IAAKW,EACLxD,MAAOsD,EAAItD,MACXC,YAAaqD,EAAIrD,YACjBC,IAAKoD,EAAIpD,KAAOoD,EAAIrD,YACpBE,MAAOmD,EAAInD,MACXC,UAAWkD,EAAIlD,UACfC,UAAWuC,EAAQvC,UACnBC,SAAUsC,EAAQtC,SAClBC,UAAWqC,EAAQrC,UACnBC,SAAUoC,EAAQpC,SAClBC,cAAemC,EAAQnC,cACvBC,YAAakC,EAAQlC,cAIzBC,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAK,OAAOW,KAAS,qBAGhB,EDfNP,CADkBL,EACYH,EAAQK,GAE/C,IAAK,OAEH,MCekBY,EACxBd,EACAC,EACAH,EACAC,KAEA,MAAMgB,EAAUf,EAAQA,QAAQgB,KAAK,YACrC,IAAKD,EAAS,OAAOhD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKA,GAAK,kBAErC,MAAMgB,EAAahB,IAAQF,EACrBmB,EAAYA,KACQpB,EAApBG,IAAQF,EAA0B,GACnBE,EAAI,EAGnBkB,EAAcJ,EAAQK,QAAU,KAEhC,KAAEC,EAAI,SAAEC,GAAatB,EAC3B,OAAQA,EAAQuB,MACd,IAAK,KACH,OACExD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,mBAOvC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,KACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAI,CACHsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,IAAK,OACH,OACElD,EAAAA,cAACC,EAAa,CAACmB,YAAa8B,EAAYhB,IAAKA,GAC3ClC,EAAAA,cAACC,EAAe,CAACwD,QAASN,GACxBnD,EAAAA,cAACZ,EAAAA,GAAO,CACNsE,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,MAGvChD,EAAAA,cAACC,EAAS,CAACmB,YAAa8B,EAAY3B,SAAU6B,IAC9CpD,EAAAA,cAACC,EAAiB,CAChBmB,YAAa8B,EACb3B,SAAU6B,EACVK,QAASN,GAGPnD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKgB,EAAa,SAAW,gBAChCA,EAAa,SAAW,kBAMrC,QACE,OAAOlD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKA,GAAK,uBAC3B,ED9Vaa,CADmBd,EAGxBE,EACAJ,EACAC,GAGJ,IAAK,cAAe,CAClB,MAAM4B,EAAyB3B,GACxB4B,EAAgBC,GAAmBF,EAAuB3B,QAE3D8B,EAAc,GAAAC,QAAAC,EAAAA,EAAAA,GAAIJ,IAAcI,EAAAA,EAAAA,GAAKH,IAAiBI,QAC1DvF,IAAA,IAAC,KAAE0D,GAAM1D,EAAA,MAAc,SAAT0D,CAAe,IAGzB8B,EAAe,GAAAH,QAAAC,EAAAA,EAAAA,GAAIJ,IAAcI,EAAAA,EAAAA,GAAKH,IAAiBI,QAC3DrF,IAAA,IAAC,KAAEwD,GAAMxD,EAAA,MAAc,UAATwD,CAAgB,IAEhC,OACErC,EAAAA,cAACC,EAAkB,CAACiC,IAAKC,GACtB,GAAA6B,QAAAC,EAAAA,EAAAA,GAAIE,IAAYF,EAAAA,EAAAA,GAAKF,IAAavB,KAAI,CAAC4B,EAAIC,IAC1CxC,EACEC,EACAC,EACAC,EAHFH,CAIEuC,EAAI,gBAAgBjC,KAAakC,OAI3C,CACA,QACE,OAAOrE,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKC,GAAW,0BACjC,EAcJ,MARKpD,IAA2B,IAA1B,SAAEuF,EAAQ,OAAExC,GAAQ/C,EACxB,MAAM,EAACiD,EAAW,EAACD,IAAiBwC,EAAAA,EAAAA,UAAS,IAC7C,OACEvE,EAAAA,cAACC,EAAa,KACXqE,EAAS9B,IAAIX,EAAiBC,EAAQC,EAAeC,IACxC,C,mGEnEb,MAAMvB,EAAcnC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAVJ,CAAU,4HAMdoC,EAAAA,GAAcC,WAKxBG,EAAexC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,kEAOzBkG,EAAiBlG,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAVJ,CAAU,0EAGjBmG,EAAAA,GAAW9D,WAKrB+D,EAAqBpG,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAVJ,CAAU,oEAO/BqG,EAAsBrG,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAVJ,CAAU,oE,cCxBtC,MAAMuD,EACVC,GACD,CAACG,EAA+BC,KAC9B,MAAMC,EAAYD,EAAIE,WAEtB,OAAQH,EAAQI,MACd,IAAK,QACH,MACME,EADmBN,EACeA,QAAQO,KAAIC,GAClDX,EAAOY,MAAKC,GAAOA,EAAIC,WAAaH,MAEtC,OACEzC,EAAAA,cAACC,EAAc,CAACiC,IAAKC,GAClBI,EAAeC,KAAI,CAACG,EAAKE,IACxBF,EACEA,EAAInD,OACFQ,EAAAA,cAAC8C,EAAAA,EAAgB,CACfZ,IAAKW,EACLxD,MAAOsD,EAAItD,MACXC,YAAaqD,EAAIrD,YACjBC,IAAKoD,EAAIpD,KAAOoD,EAAIrD,YACpBE,MAAOmD,EAAInD,MACXC,UAAWkD,EAAIlD,UACfC,UAAWuC,EAAQvC,UACnBC,SAAUsC,EAAQtC,SAClBC,UAAWqC,EAAQrC,UACnBC,SAAUoC,EAAQpC,SAClBC,cAAemC,EAAQnC,cACvBC,YAAakC,EAAQlC,cAIzBC,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAK,OAAOW,KAAS,sBAKrC,IAAK,OACH,MAAM+B,EAAoB3C,EACpBe,EAAU4B,EAAkB3C,QAAQgB,KAAK,YAC/C,IAAKD,EAAS,OAAOhD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKC,GAAW,kBAE3C,MAAM,KAAEmB,EAAI,SAAEC,GAAaqB,EAC3B,OAAQA,EAAkBpB,MACxB,IAAK,KACH,OACExD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,KACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAI,CACH8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,IAAK,OACH,OACEhD,EAAAA,cAACZ,EAAAA,GAAO,CACN8C,IAAKC,EACLuB,WAAYH,EACZI,MAAOL,EACPpD,wBAAyB,CAAEC,OAAQ6C,KAGzC,QACE,OAAOhD,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKC,GAAW,uBAEnC,IAAK,cAAe,CAClB,MAAMyB,EAAyB3B,GACxB4B,EAAgBC,GAAmBF,EAAuB3B,QACjE,OACEjC,EAAAA,cAACC,EAAgB,CAACiC,IAAKC,GACrBnC,EAAAA,cAACC,EAAoB,KAClB4D,EAAerB,KAAI,CAAC4B,EAAIC,IACvBxC,EAAiBC,EAAjBD,CAAyBuC,EAAI,iBAAiBC,QAGlDrE,EAAAA,cAACC,EAAqB,KACnB6D,EAAgBtB,KAAI,CAAC4B,EAAIC,IACxBxC,EAAiBC,EAAjBD,CAAyBuC,EAAI,kBAAkBC,QAKzD,CACA,QACE,OAAOrE,EAAAA,cAACZ,EAAAA,GAAI,CAAC8C,IAAKC,GAAW,0BACjC,ECxLJ,MAJKxD,IAAA,IAAC,SAAE2F,EAAQ,OAAExC,GAAQnD,EAAA,OACxBqB,EAAAA,cAACC,EAAa,KAAEqE,EAAS9B,IAAIX,EAAiBC,IAAyB,C","sources":["webpack://site-gruppo-natura-lentiai/./src/components/image-with-credits/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/image-with-credits/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/helpers.tsx","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/helpers.tsx","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport * as T from \"./../typography\"\n\nexport const ImgWrapper = styled.div<{\n  $maxWidth?: number\n  $maxHeight?: number\n  $minWidth?: number\n  $minHeight?: number\n}>`\n  text-align: center;\n  ${({ $maxWidth }) => ($maxWidth ? `max-width: ${$maxWidth}px;` : \"\")}\n  ${({ $maxHeight }) => ($maxHeight ? `max-width: ${$maxHeight}px;` : \"\")}\n  ${({ $minWidth }) => ($minWidth ? `min-width: ${$minWidth}px;` : \"\")}\n  ${({ $minHeight }) => ($minHeight ? `min-width: ${$minHeight}px;` : \"\")}\n`\n\nexport const ImageDescription = styled(T.P3)`\n  white-space: break-spaces;\n`\n","import { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\n\nconst ImageWithCredits = ({\n  title,\n  description,\n  alt,\n  image,\n  copyright,\n  minHeight,\n  minWidth,\n  maxHeight,\n  maxWidth,\n  noDescription,\n  noCopyright,\n}: {\n  title: string\n  description: string\n  alt: string\n  image: IGatsbyImageData\n  copyright: string | undefined\n  minWidth?: number\n  minHeight?: number\n  maxWidth?: number\n  maxHeight?: number\n  noDescription?: boolean\n  noCopyright?: boolean\n}) => (\n  <S.ImgWrapper\n    $maxHeight={maxHeight}\n    $maxWidth={maxWidth}\n    $minHeight={minHeight}\n    $minWidth={minWidth}\n  >\n    <T.H3 dangerouslySetInnerHTML={{ __html: title }} />\n    <GatsbyImage\n      image={image}\n      alt={alt}\n      style={{ borderRadius: \"8px\", marginTop: 4 }}\n    />\n    {noCopyright ? null : copyright ? (\n      <T.P4>Foto di {copyright}</T.P4>\n    ) : (\n      <T.P4>Autore sconosciuto</T.P4>\n    )}\n    {!noDescription && (\n      <S.ImageDescription\n        style={{\n          maxWidth: image.width,\n        }}\n        dangerouslySetInnerHTML={{ __html: description }}\n      />\n    )}\n  </S.ImgWrapper>\n)\n\nexport default ImageWithCredits\n","import styled, { keyframes } from \"styled-components\"\nimport { breakpoint, breakpointNum, colors } from \"../../styles\"\nimport * as T from \"./../typography\"\nimport { color } from \"framer-motion\"\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 32px;\n  justify-content: center;\n  @media (min-width: ${breakpointNum.bigtablet + 1}px) {\n    display: none;\n  }\n  @media (max-width: ${breakpointNum.tablet}px) {\n    padding: 24px;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    padding: 16px;\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const TwoWrapperMobile = styled.div`\n  @media (min-width: ${breakpointNum.bigtablet + 1}px) {\n    display: none;\n  }\n  min-height: 100px;\n`\n\nexport const ContinueReading = styled(T.P2)`\n  color: ${colors.green.green700};\n`\n\nexport const TextWrapper = styled.div<{ $isExpanded: boolean }>`\n  position: relative;\n  overflow: hidden;\n  max-height: ${({ $isExpanded }) => ($isExpanded ? \"2000px\" : \"4.5em\")};\n  @media (max-width: ${breakpointNum.mobile}px) {\n    max-height: ${({ $isExpanded }) => ($isExpanded ? \"2000px\" : \"6em\")};\n  }\n  transition: max-height 0.8s ease-in-out;\n`\n\nexport const TextContainer = styled.div`\n  position: relative;\n`\n\nexport const FadeOut = styled.div<{ $isExpanded: boolean; $isShort: boolean }>`\n  ${({ $isShort }) => $isShort && \"display:none;\"}\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 2em;\n  background: linear-gradient(to bottom, transparent, ${colors.green.green500});\n  pointer-events: none;\n\n  opacity: ${({ $isExpanded }) => ($isExpanded ? 0 : 1)};\n  transition: opacity 0.8s ease-in-out;\n`\n\nexport const ReadMoreWrapper = styled.div<{\n  $isExpanded: boolean\n  $isShort: boolean\n}>`\n  ${({ $isShort }) => $isShort && \"display:none;\"}\n  cursor: pointer;\n  position: absolute;\n  top: 2.3em;\n  z-index: 10;\n  justify-self: anchor-center;\n  ${({ $isExpanded }) => $isExpanded && \"position: unset;\"}\n\n  h3 {\n    color: ${colors.green.green950};\n    opacity: 0;\n    animation: fadeIn 1s ease-in-out forwards;\n    animation-delay: 0.5s;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media (min-width: ${breakpointNum.tablet + 1}px) {\n    top: 2em;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    top: 4.2em;\n  }\n`\n","import React, { useState } from \"react\"\nimport {\n  DataJSONType,\n  ImageContentData,\n  ImageData,\n  TemplateTwoColumnsData,\n  TextContentData,\n} from \"../../types\"\nimport * as T from \"./../typography\"\nimport { renderImage, renderText } from \"./helpers\"\nimport * as S from \"./styled\"\n\nconst renderComponents =\n  (\n    images: ImageData[],\n    setExpandText: React.Dispatch<React.SetStateAction<any>>,\n    expandText: any,\n  ) =>\n  (content: DataJSONType[number], key: Number | string): any => {\n    const keyString = key.toString()\n    switch (content.type) {\n      case \"image\":\n        const castedImgContent = content as ImageContentData\n        return renderImage(castedImgContent, images, keyString)\n\n      case \"text\":\n        const castedTextContent = content as TextContentData\n        return renderText(\n          castedTextContent,\n          keyString,\n          setExpandText,\n          expandText,\n        )\n\n      case \"two-columns\": {\n        const castedTwoColsComponent = content as TemplateTwoColumnsData\n        const [leftComponents, rightComponents] = castedTwoColsComponent.content\n\n        const mobileTexts = [...leftComponents, ...rightComponents].filter(\n          ({ type }) => type === \"text\",\n        )\n\n        const mobileImages = [...leftComponents, ...rightComponents].filter(\n          ({ type }) => type === \"image\",\n        )\n        return (\n          <S.TwoWrapperMobile key={keyString}>\n            {[...mobileImages, ...mobileTexts].map((lc, idx) =>\n              renderComponents(\n                images,\n                setExpandText,\n                expandText,\n              )(lc, `two-cols-seq-${keyString}-${idx}`),\n            )}\n          </S.TwoWrapperMobile>\n        )\n      }\n      default:\n        return <T.H1 key={keyString}>Content type Not Found</T.H1>\n    }\n  }\n\nconst MobileContentToComponent: React.FC<{\n  pageData: DataJSONType\n  images: ImageData[]\n}> = ({ pageData, images }) => {\n  const [expandText, setExpandText] = useState(\"\")\n  return (\n    <S.MainWrapper>\n      {pageData.map(renderComponents(images, setExpandText, expandText))}\n    </S.MainWrapper>\n  )\n}\nexport default MobileContentToComponent\n","import React from \"react\"\nimport { ImageContentData, ImageData, TextContentData } from \"../../types\"\nimport ImageWithCredits from \"../image-with-credits\"\nimport * as T from \"../typography\"\nimport * as S from \"./styled\"\n\nexport const renderImage = (\n  content: ImageContentData,\n  images: ImageData[],\n  key: string,\n) => {\n  const filteredImages = content.content.map(imgFilename =>\n    images.find(img => img.fileName === imgFilename),\n  )\n  return (\n    <S.ImageWrapper key={key}>\n      {filteredImages.map((img, index) =>\n        img ? (\n          img.image && (\n            <ImageWithCredits\n              key={index}\n              title={img.title}\n              description={img.description}\n              alt={img.alt || img.description}\n              image={img.image}\n              copyright={img.copyright}\n              minHeight={content.minHeight}\n              minWidth={content.minWidth}\n              maxHeight={content.maxHeight}\n              maxWidth={content.maxWidth}\n              noDescription={content.noDescription}\n              noCopyright={content.noCopyright}\n            />\n          )\n        ) : (\n          <T.H2 key={`img-${index}`}>Image not found</T.H2>\n        ),\n      )}\n    </S.ImageWrapper>\n  )\n}\n\nexport const renderText = (\n  content: TextContentData,\n  key: string,\n  setExpandText: React.Dispatch<React.SetStateAction<string>>,\n  expandText: string,\n) => {\n  const theText = content.content.join(\" <br /> \")\n  if (!theText) return <T.H2 key={key}>Text not found</T.H2>\n\n  const isExpanded = key === expandText\n  const onClickFn = () => {\n    if (key === expandText) setExpandText(\"\")\n    else setExpandText(key)\n  }\n\n  const isShortText = theText.length <= 135\n\n  const { font, position } = content\n  switch (content.size) {\n    case \"h1\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H1\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"h2\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H2\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"h3\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H3\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"h4\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H4\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"h5\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H5\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"h6\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H6\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"h7\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.H7\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"p1\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.P1\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"p2\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.P2\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"p3\":\n      return (\n        <>\n          <S.TextWrapper $isExpanded={isExpanded} key={key}>\n            <S.TextContainer onClick={onClickFn}>\n              <T.P3\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            </S.TextContainer>\n            <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n            <S.ReadMoreWrapper\n              $isExpanded={isExpanded}\n              $isShort={isShortText}\n              onClick={onClickFn}\n            >\n              {\n                <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                  {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n                </T.H3>\n              }\n            </S.ReadMoreWrapper>\n          </S.TextWrapper>\n        </>\n      )\n    case \"p4\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.P4\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"p5\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.P5\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    case \"note\":\n      return (\n        <S.TextWrapper $isExpanded={isExpanded} key={key}>\n          <S.TextContainer onClick={onClickFn}>\n            <T.Notes\n              $textAlign={position}\n              $font={font}\n              dangerouslySetInnerHTML={{ __html: theText }}\n            />\n          </S.TextContainer>\n          <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n          <S.ReadMoreWrapper\n            $isExpanded={isExpanded}\n            $isShort={isShortText}\n            onClick={onClickFn}\n          >\n            {\n              <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n                {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n              </T.H3>\n            }\n          </S.ReadMoreWrapper>\n        </S.TextWrapper>\n      )\n    default:\n      return <T.H2 key={key}>Text size not found</T.H2>\n  }\n}\n","import styled from \"styled-components\"\nimport { breakpoint, breakpointNum } from \"../../styles\"\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 32px;\n  justify-content: center;\n  @media (max-width: ${breakpointNum.bigtablet}px) {\n    display: none;\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const TwoColsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  @media (max-width: ${breakpoint.bigtablet}) {\n    display: none;\n  }\n`\n\nexport const LeftTwoColsWrapper = styled.div`\n  flex: 1;\n  padding: 16px;\n  align-content: center;\n  justify-items: center;\n`\n\nexport const RightTwoColsWrapper = styled.div`\n  flex: 1;\n  padding: 16px;\n  align-content: center;\n  justify-items: center;\n`\n","import {\n  DataJSONType,\n  ImageContentData,\n  ImageData,\n  TemplateTwoColumnsData,\n  TextContentData,\n} from \"../../types\"\nimport ImageWithCredits from \"../image-with-credits\"\nimport * as S from \"./styled\"\nimport * as T from \"./../typography\"\nimport React from \"react\"\n\nexport const renderComponents =\n  (images: ImageData[]) =>\n  (content: DataJSONType[number], key: Number | string): any => {\n    const keyString = key.toString()\n\n    switch (content.type) {\n      case \"image\":\n        const castedImgContent = content as ImageContentData\n        const filteredImages = castedImgContent.content.map(imgFilename =>\n          images.find(img => img.fileName === imgFilename),\n        )\n        return (\n          <S.ImageWrapper key={keyString}>\n            {filteredImages.map((img, index) =>\n              img ? (\n                img.image && (\n                  <ImageWithCredits\n                    key={index}\n                    title={img.title}\n                    description={img.description}\n                    alt={img.alt || img.description}\n                    image={img.image}\n                    copyright={img.copyright}\n                    minHeight={content.minHeight}\n                    minWidth={content.minWidth}\n                    maxHeight={content.maxHeight}\n                    maxWidth={content.maxWidth}\n                    noDescription={content.noDescription}\n                    noCopyright={content.noCopyright}\n                  />\n                )\n              ) : (\n                <T.H2 key={`img-${index}`}>Image not found</T.H2>\n              ),\n            )}\n          </S.ImageWrapper>\n        )\n      case \"text\":\n        const castedTextContent = content as TextContentData\n        const theText = castedTextContent.content.join(\" <br /> \")\n        if (!theText) return <T.H2 key={keyString}>Text not found</T.H2>\n\n        const { font, position } = castedTextContent\n        switch (castedTextContent.size) {\n          case \"h1\":\n            return (\n              <T.H1\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"h2\":\n            return (\n              <T.H2\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"h3\":\n            return (\n              <T.H3\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"h4\":\n            return (\n              <T.H4\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"h5\":\n            return (\n              <T.H5\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"h6\":\n            return (\n              <T.H6\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"h7\":\n            return (\n              <T.H7\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"p1\":\n            return (\n              <T.P1\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"p2\":\n            return (\n              <T.P2\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"p3\":\n            return (\n              <T.P3\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"p4\":\n            return (\n              <T.P4\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"p5\":\n            return (\n              <T.P5\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          case \"note\":\n            return (\n              <T.Notes\n                key={keyString}\n                $textAlign={position}\n                $font={font}\n                dangerouslySetInnerHTML={{ __html: theText }}\n              />\n            )\n          default:\n            return <T.H2 key={keyString}>Text size not found</T.H2>\n        }\n      case \"two-columns\": {\n        const castedTwoColsComponent = content as TemplateTwoColumnsData\n        const [leftComponents, rightComponents] = castedTwoColsComponent.content\n        return (\n          <S.TwoColsWrapper key={keyString}>\n            <S.LeftTwoColsWrapper>\n              {leftComponents.map((lc, idx) =>\n                renderComponents(images)(lc, `two-cols-left-${idx}`),\n              )}\n            </S.LeftTwoColsWrapper>\n            <S.RightTwoColsWrapper>\n              {rightComponents.map((lc, idx) =>\n                renderComponents(images)(lc, `two-cols-right-${idx}`),\n              )}\n            </S.RightTwoColsWrapper>\n          </S.TwoColsWrapper>\n        )\n      }\n      default:\n        return <T.H1 key={keyString}>Content type Not Found</T.H1>\n    }\n  }\n","import React from \"react\"\nimport { DataJSONType, ImageData } from \"../../types\"\nimport { renderComponents } from \"./helpers\"\nimport * as S from \"./styled\"\n\nconst ContentToComponent: React.FC<{\n  pageData: DataJSONType\n  images: ImageData[]\n}> = ({ pageData, images }) => (\n  <S.MainWrapper>{pageData.map(renderComponents(images))}</S.MainWrapper>\n)\n\nexport default ContentToComponent\n"],"names":["ImgWrapper","styled","div","withConfig","displayName","componentId","_ref","$maxWidth","_ref2","$maxHeight","_ref3","$minWidth","_ref4","$minHeight","ImageDescription","T","title","description","alt","image","copyright","minHeight","minWidth","maxHeight","maxWidth","noDescription","noCopyright","React","S","dangerouslySetInnerHTML","__html","GatsbyImage","style","borderRadius","marginTop","width","MainWrapper","breakpointNum","bigtablet","tablet","mobile","ImageWrapper","TwoWrapperMobile","TextWrapper","colors","green","green700","$isExpanded","TextContainer","FadeOut","$isShort","green500","ReadMoreWrapper","_ref5","_ref6","green950","renderComponents","images","setExpandText","expandText","content","key","keyString","toString","type","renderImage","filteredImages","map","imgFilename","find","img","fileName","index","ImageWithCredits","renderText","theText","join","isExpanded","onClickFn","isShortText","length","font","position","size","onClick","$textAlign","$font","castedTwoColsComponent","leftComponents","rightComponents","mobileTexts","concat","_toConsumableArray","filter","mobileImages","lc","idx","pageData","useState","TwoColsWrapper","breakpoint","LeftTwoColsWrapper","RightTwoColsWrapper","castedTextContent"],"sourceRoot":""}