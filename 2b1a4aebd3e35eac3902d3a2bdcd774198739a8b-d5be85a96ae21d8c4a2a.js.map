{"version":3,"file":"2b1a4aebd3e35eac3902d3a2bdcd774198739a8b-d5be85a96ae21d8c4a2a.js","mappings":"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","sources":["webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-utils/dist/es/memo.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/controls/BaseGroup.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/controls/Group.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-utils/dist/es/progress.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/animation/waapi/utils/easing.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-utils/dist/es/noop.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/frameloop/sync-time.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-utils/dist/es/errors.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/frameloop/microtask.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://site-gruppo-natura-lentiai/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://site-gruppo-natura-lentiai/./src/components/carousel/styled.ts","webpack://site-gruppo-natura-lentiai/./src/hooks/usePreventDragAndWheel.tsx","webpack://site-gruppo-natura-lentiai/./src/components/carousel/index.tsx","webpack://site-gruppo-natura-lentiai/./src/hooks/useSwipe.ts"],"sourcesContent":["import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement === null || visualElement === void 0 ? void 0 : visualElement.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../../utils/supports/scroll-timeline.mjs';\n\nclass BaseGroupPlaybackControls {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        // Support for new finished Promise and legacy thennable API\n        return Promise.all(this.animations.map((animation) => \"finished\" in animation ? animation.finished : animation));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { BaseGroupPlaybackControls };\n","import { BaseGroupPlaybackControls } from './BaseGroup.mjs';\n\n/**\n * TODO: This is a temporary class to support the legacy\n * thennable API\n */\nclass GroupPlaybackControls extends BaseGroupPlaybackControls {\n    then(onResolve, onReject) {\n        return Promise.all(this.animations).then(onResolve).catch(onReject);\n    }\n}\n\nexport { GroupPlaybackControls };\n","function getValueTransition(transition, key) {\n    return transition\n        ? transition[key] ||\n            transition[\"default\"] ||\n            transition\n        : undefined;\n}\n\nexport { getValueTransition };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","function isGenerator(type) {\n    return typeof type === \"function\";\n}\n\nexport { isGenerator };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {\n    linearEasing: undefined,\n};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => { var _a; return (_a = supportsFlags[supportsFlag]) !== null && _a !== void 0 ? _a : memoized(); };\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { progress } from 'motion-utils';\n\nconst generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(progress(0, numPoints - 1, i)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from './linear.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    var _a;\n    if (elementOrSelector instanceof Element) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            // TODO: Refactor to utils package\n            // invariant(\n            //     Boolean(scope.current),\n            //     \"Scope provided, but no element detected.\"\n            // )\n            root = scope.current;\n        }\n        const elements = (_a = selectorCache === null || selectorCache === void 0 ? void 0 : selectorCache[elementOrSelector]) !== null && _a !== void 0 ? _a : root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(elementOrSelector, onPressStart, options = {}) {\n    const [elements, eventOptions, cancelEvents] = setupGesture(elementOrSelector, options);\n    const startPress = (startEvent) => {\n        const element = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(element))\n            return;\n        isPressing.add(element);\n        const onPressEnd = onPressStart(element, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(element)) {\n                return;\n            }\n            isPressing.delete(element);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, options.useGlobalTarget ||\n                isNodeOrChild(element, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    elements.forEach((element) => {\n        if (!isElementKeyboardAccessible(element) &&\n            element.getAttribute(\"tabindex\") === null) {\n            element.tabIndex = 0;\n        }\n        const target = options.useGlobalTarget ? window : element;\n        target.addEventListener(\"pointerdown\", startPress, eventOptions);\n        element.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions), eventOptions);\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","import { MotionGlobalConfig } from '../utils/GlobalConfig.mjs';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.0.6\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/u);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/u);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    var _a;\n                    (_a = element.getValue(key)) === null || _a === void 0 ? void 0 : _a.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue === null || motionValue === void 0 ? void 0 : motionValue.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 !== null && token1 !== void 0 ? token1 : token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        var _a;\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if ((_a = this.removedTransforms) === null || _a === void 0 ? void 0 : _a.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    var _a;\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = (_a = origin.values[originIndex]) !== null && _a !== void 0 ? _a : 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n    };\n    return generator;\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { time } from '../../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = (element === null || element === void 0 ? void 0 : element.KeyframeResolver) || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            if (process.env.NODE_ENV !== \"production\") {\n                invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n            }\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        var _a;\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = (_a = this.currentTime) !== null && _a !== void 0 ? _a : 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { mapEasingToNativeEasing } from 'motion-dom';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { startWaapiAnimation };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { startWaapiAnimation } from './waapi/index.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime !== null && startTime !== void 0 ? startTime : this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !transformTemplate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, GroupPlaybackControls } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\nimport { frame } from '../../frameloop/frame.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unqiue transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupPlaybackControls([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from 'motion-utils';\nimport { setDragLock } from 'motion-dom';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe)\n            register(id);\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nconst isDebug = typeof window !== \"undefined\" && window.MotionDebug !== undefined;\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (isDebug) {\n                    metrics.totalNodes =\n                        metrics.resolvedTargetDeltas =\n                            metrics.recalculatedProjection =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (isDebug) {\n                    window.MotionDebug.record(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (isDebug) {\n                metrics.resolvedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (isDebug) {\n                metrics.recalculatedProjection++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (isDebug) {\n        metrics.totalNodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    var _a;\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            ((_a = visualElement === null || visualElement === void 0 ? void 0 : visualElement.getValue(key)) === null || _a === void 0 ? void 0 : _a.liveStyle) !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.0.6\", `Attempting to mix Motion versions ${nextValue.version} with 12.0.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { motion } from \"framer-motion\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport styled from \"styled-components\"\nimport { breakpointNum, colors, horizBreakpointsHeight } from \"../../styles\"\nimport * as T from \"./../typography\"\n\nexport const OuterWrapper = styled.div`\n  justify-content: space-between;\n  overflow: hidden;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n  min-width: calc(100vw - 82px);\n  min-height: 85vh;\n  @media (max-width: ${breakpointNum.tablet}px) {\n    min-width: calc(100vw - 60px);\n    min-height: 78vh;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    min-height: 70vh;\n  }\n  @media (max-height: ${horizBreakpointsHeight.medium}px) {\n    min-height: 350px;\n  }\n`\n\nexport const Wrapper = styled.div`\n  position: relative;\n  width: 90%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nexport const ButtonWrapper = styled.div<{ $position: \"left\" | \"right\" }>`\n  background-color: ${colors.green.green400};\n  border-radius: 50%;\n  border: 1px solid ${colors.green.green800};\n  z-index: 13;\n  width: 36px;\n  height: 36px;\n  cursor: pointer;\n  transition: all 0.5s;\n  margin: 0 1em;\n  @media (max-width: ${breakpointNum.mobile}px) {\n    width: 24px;\n    height: 24px;\n  }\n\n  ${({ $position }) =>\n    $position === \"left\"\n      ? `box-shadow: -2px 2px 4px ${colors.green.green950};`\n      : `box-shadow: 2px 2px 4px ${colors.green.green950};`}\n\n  > svg {\n    ${({ $position }) =>\n      $position === \"left\"\n        ? \"transform: rotate(90deg);\"\n        : \"transform: rotate(-90deg);\"}\n    fill: ${colors.green.green700};\n    margin-top: 6px;\n    ${({ $position }) =>\n      $position === \"left\" ? \"margin-left: 3px;\" : \"margin-left: 8px;\"}\n    transition: all 0.5s;\n\n    @media (max-width: ${breakpointNum.mobile}px) {\n      ${({ $position }) =>\n        $position === \"left\" ? \"margin-left: -2px;\" : \"margin-left: 1px;\"}\n      height: 12px;\n    }\n  }\n  &:hover {\n    background-color: ${colors.green.green500};\n    > svg {\n      fill: ${colors.green.green800};\n    }\n  }\n  &:active {\n    background-color: ${colors.green.green550};\n    > svg {\n      fill: ${colors.green.green900};\n    }\n  }\n`\n\nexport const Shadow = styled.div`\n  padding: 5px;\n  width: 50%;\n  height: 10px;\n  background: radial-gradient(\n    ellipse at center,\n    ${colors.green.green900},\n    transparent\n  );\n  filter: blur(8px);\n  opacity: 0.8;\n`\n\nexport const CarouselItem = styled(motion.div)<{ $isCurrentImage: boolean }>`\n  position: absolute;\n  transform: translate(-50%, -50%);\n  max-height: 700px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  .title {\n    padding-bottom: 5px;\n    width: 100%;\n    text-align: center;\n    ${({ $isCurrentImage }) => !$isCurrentImage && \"opacity: 0.6;\"}\n  }\n  .caption {\n    margin-top: 1.5em;\n    text-align: center;\n    ${({ $isCurrentImage }) => !$isCurrentImage && \"opacity: 0.6;\"}\n  }\n  .copyright {\n    margin-top: 1em;\n    text-align: center;\n    ${({ $isCurrentImage }) => !$isCurrentImage && \"opacity: 0.6;\"}\n  }\n`\n\nexport const ImgWrapper = styled.div<{ $showZoom: boolean }>`\n  ${({ $showZoom }) => $showZoom && \"cursor: zoom-in;\"}\n`\n\nexport const StyledGatsbyImage = styled(GatsbyImage)`\n  img {\n    max-height: 55vh;\n    @media (max-width: ${breakpointNum.bigtablet}px) {\n      max-height: 50vh;\n    }\n    @media (max-width: ${breakpointNum.tablet}px) {\n      max-height: 50vh;\n    }\n    @media (max-width: ${breakpointNum.mobile}px) {\n      max-height: 50vh;\n    }\n    @media (max-height: ${horizBreakpointsHeight.medium}px) {\n      max-height: 50vh;\n    }\n  }\n`\n\nexport const ImageOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: ${colors.green.green950};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 9999;\n  flex-direction: column;\n  animation: fadeIn 0.5s ease-in-out forwards;\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`\n\nexport const CloseImageCaption = styled(T.H2)`\n  position: absolute;\n  top: 0px;\n  right: 1.8em;\n  color: ${colors.green.green50};\n  cursor: pointer;\n  transition: all 0.5s ease-in;\n  @media (max-width: ${breakpointNum.mobile}px) {\n    right: 1em;\n  }\n  &:hover {\n    color: ${colors.green.green200};\n  }\n  &:active {\n    color: ${colors.green.green300};\n  }\n`\n\nexport const LargeImageWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  > * {\n    color: ${colors.green.green100};\n    text-align: center;\n  }\n`\n\nexport const StyledGatsbyImageLarge = styled(GatsbyImage)`\n  border: solid 2px ${colors.green.green50};\n  max-height: 70vh;\n  max-width: 95vw;\n  @media (max-width: ${breakpointNum.tablet}px) {\n    max-height: 75vh;\n    max-width: 90vw;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    max-height: 70vh;\n    max-width: 90vw;\n  }\n\n  img {\n    max-width: 100%;\n    max-height: 80vh;\n    transition: transform 0.3s ease-in-out;\n    @media (max-width: ${breakpointNum.tablet}px) {\n      max-height: 75vh;\n      max-width: 90vw;\n    }\n    @media (max-width: ${breakpointNum.mobile}px) {\n      max-height: 70vh;\n      max-width: 90vw;\n    }\n    @media (max-height: ${horizBreakpointsHeight.thin}px) {\n      max-height: 60vh;\n      max-width: 80vw;\n    }\n  }\n`\n","import { useEffect } from \"react\"\n\nconst usePreventScrollOnImageView = (condition: boolean) => {\n  const handleWheel = (event: WheelEvent) => {\n    if (condition) {\n      event.preventDefault()\n    }\n  }\n\n  const handleTouchMove = (event: TouchEvent) => {\n    if (condition) {\n      event.preventDefault()\n    }\n  }\n\n  const handleMouseMove = (event: MouseEvent) => {\n    if (condition) {\n      event.preventDefault()\n    }\n  }\n\n  useEffect(() => {\n    if (condition) {\n      window.addEventListener(\"wheel\", handleWheel, { passive: false })\n      window.addEventListener(\"touchmove\", handleTouchMove, { passive: false })\n      window.addEventListener(\"mousemove\", handleMouseMove)\n    } else {\n      window.removeEventListener(\"wheel\", handleWheel)\n      window.removeEventListener(\"touchmove\", handleTouchMove)\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n    }\n\n    return () => {\n      window.removeEventListener(\"wheel\", handleWheel)\n      window.removeEventListener(\"touchmove\", handleTouchMove)\n      window.removeEventListener(\"mousemove\", handleMouseMove)\n    }\n  }, [condition])\n\n  return null\n}\n\nexport default usePreventScrollOnImageView\n","import React, { useCallback, useEffect, useState } from \"react\"\nimport { ImageData } from \"../../types\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\nimport Icon from \"../icons\"\nimport useSwipe from \"../../hooks/useSwipe\"\nimport useResponsiveClickHandler from \"../../hooks/useResponsiveClickHandler\"\nimport { breakpoint, breakpointNum, horizBreakpointsHeight } from \"../../styles\"\nimport usePreventScrollOnImageView from \"../../hooks/usePreventDragAndWheel\"\n\ninterface CarouselProps {\n  images: ImageData[]\n}\n\nconst Carousel: React.FC<CarouselProps> = ({ images }) => {\n  const [currentIndex, setCurrentIndex] = useState(0)\n  const [showLargeImage, setShowLargeImage] = useState(false)\n  const swipeHandlers = useSwipe({\n    onSwipedLeft: () => {\n      setCurrentIndex(prev => (prev === images.length - 1 ? 0 : prev + 1))\n    },\n    onSwipedRight: () => {\n      setCurrentIndex(prev => (prev === 0 ? images.length - 1 : prev - 1))\n    },\n  })\n\n  const handlePrev = () => {\n    setCurrentIndex(prev => (prev === 0 ? images.length - 1 : prev - 1))\n  }\n\n  const handleNext = () => {\n    setCurrentIndex(prev => (prev === images.length - 1 ? 0 : prev + 1))\n  }\n\n  const onClickImage = () => {\n    setShowLargeImage(true)\n  }\n\n  const closeImage = () => {\n    setShowLargeImage(false)\n  }\n\n  // Use arrows to move back and forth\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (event.key === \"ArrowLeft\") {\n        handlePrev()\n      } else if (event.key === \"ArrowRight\") {\n        handleNext()\n      }\n    },\n    [handlePrev, handleNext],\n  )\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown)\n    }\n  }, [handleKeyDown])\n\n  // If we are seeing an image, prevent the\n  // the user to scroll and drag up/down\n  usePreventScrollOnImageView(showLargeImage)\n\n  const getStyles = (index: number) => {\n    const distance = Math.abs(index - currentIndex)\n    const isExtreme = distance >= 2\n    const isCentralImage = distance === 0\n    const isSideImage = distance === 1\n    return {\n      scale: isExtreme ? 0.25 : isSideImage ? 0.5 : 1,\n      zIndex: isCentralImage ? 3 : isSideImage ? 2 : 1,\n      opacity: isCentralImage ? 1 : isSideImage ? 0.66 : 0.33,\n      x: `${(index - currentIndex) * 33}%`,\n    }\n  }\n\n  return (\n    <>\n      <S.OuterWrapper>\n        <S.ButtonWrapper $position=\"left\" onClick={handlePrev}>\n          <Icon type=\"chevron\" width={24} />\n        </S.ButtonWrapper>\n        <S.Wrapper>\n          {images.map((image, index) => (\n            <S.CarouselItem\n              $isCurrentImage={currentIndex === index}\n              key={index}\n              animate={getStyles(index)}\n              transition={{ duration: 0.5, ease: \"easeInOut\" }}\n              {...(currentIndex === index ? swipeHandlers : {})}\n            >\n              <T.H2\n                className=\"title\"\n                dangerouslySetInnerHTML={{ __html: image.title }}\n              />\n              <S.ImgWrapper\n                $showZoom={currentIndex === index}\n                onClick={currentIndex === index ? onClickImage : undefined}\n              >\n                {image.image && (\n                  <S.StyledGatsbyImage\n                    key={`img-${index}`}\n                    image={image.image}\n                    alt={image.alt || \"Content Data\"}\n                  />\n                )}\n              </S.ImgWrapper>\n              <S.Shadow />\n              {image.copyright ? (\n                <T.P4 className=\"copyright\">Foto di {image.copyright}</T.P4>\n              ) : (\n                <T.P4 className=\"copyright\">Autore sconosciuto</T.P4>\n              )}\n              <T.P2\n                className=\"caption\"\n                dangerouslySetInnerHTML={{ __html: image.description }}\n              />\n            </S.CarouselItem>\n          ))}\n        </S.Wrapper>\n        <S.ButtonWrapper $position=\"right\" onClick={handleNext}>\n          <Icon type=\"chevron\" width={24} />\n        </S.ButtonWrapper>\n      </S.OuterWrapper>\n      {showLargeImage && images[currentIndex].image && (\n        <S.ImageOverlay className={showLargeImage ? \"visible\" : \"\"}>\n          <S.CloseImageCaption onClick={closeImage}>\n            Chiudi X\n          </S.CloseImageCaption>\n          <S.LargeImageWrapper>\n            {images[currentIndex].title && (\n              <T.H2\n                className=\"title\"\n                dangerouslySetInnerHTML={{ __html: images[currentIndex].title }}\n                style={{ marginBottom: 4 }}\n              />\n            )}\n            <S.StyledGatsbyImageLarge\n              image={images[currentIndex].image}\n              alt={images[currentIndex].alt || \"Enlarged Image\"}\n              style={{ overflow: \"visible\", maxHeight: \"80vh\" }}\n            />\n            {images[currentIndex].copyright ? (\n              <T.P4 className=\"copyright\">\n                Foto di {images[currentIndex].copyright}\n              </T.P4>\n            ) : (\n              <T.P4 className=\"copyright\">Autore sconosciuto</T.P4>\n            )}\n            {images[currentIndex].description && (\n              <T.P2\n                className=\"caption\"\n                dangerouslySetInnerHTML={{\n                  __html: images[currentIndex].description,\n                }}\n              />\n            )}\n          </S.LargeImageWrapper>\n        </S.ImageOverlay>\n      )}\n    </>\n  )\n}\n\nexport default Carousel\n","import { TouchEvent, useRef } from \"react\"\n\ninterface SwipeInput {\n  onSwipedLeft: () => void\n  onSwipedRight: () => void\n}\n\ninterface SwipeOutput {\n  onTouchStart: (e: TouchEvent) => void\n  onTouchMove: (e: TouchEvent) => void\n  onTouchEnd: () => void\n}\n\nexport default (input: SwipeInput): SwipeOutput => {\n  const touchStart = useRef<number | null>(null)\n  const touchEnd = useRef<number | null>(null)\n\n  // the required distance between touchStart and touchEnd to be detected as a swipe\n  const minSwipeDistance = 50\n\n  const onTouchStart = (e: React.TouchEvent) => {\n    touchEnd.current = null\n    touchStart.current = e.targetTouches[0].clientX\n  }\n\n  const onTouchMove = (e: React.TouchEvent) => {\n    touchEnd.current = e.targetTouches[0].clientX\n  }\n\n  const onTouchEnd = () => {\n    if (!touchStart.current || !touchEnd.current) return\n    const distance = touchStart.current - touchEnd.current\n    const isLeftSwipe = distance > minSwipeDistance\n    const isRightSwipe = distance < -minSwipeDistance\n    if (isLeftSwipe) input.onSwipedLeft()\n    if (isRightSwipe) input.onSwipedRight()\n  }\n\n  return {\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n  }\n}\n"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","key","has","set","isAnimationControls","v","start","isKeyframesTarget","Array","isArray","shallowCompare","next","prev","prevLength","length","i","isVariantLabel","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","variantPriorityOrder","variantProps","memo","callback","result","supportsScrollTimeline","window","ScrollTimeline","constructor","animations","this","stop","runAll","filter","Boolean","finished","Promise","all","map","animation","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","subscriptions","cancel","time","speed","startTime","duration","max","Math","methodName","controls","flatten","play","pause","complete","GroupPlaybackControls","then","onResolve","onReject","catch","transition","maxGeneratorDuration","calcGeneratorDuration","generator","done","Infinity","type","onfinish","isBezierDefinition","easing","supportsFlags","linearEasing","memoSupports","supportsFlag","memoized","_a","document","createElement","animate","opacity","e","progress","from","to","toFromDifference","generateLinearEasing","resolution","points","numPoints","round","substring","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","segmentEasing","isDragging","x","y","isDragActive","setupGesture","elementOrSelector","options","elements","scope","selectorCache","Element","root","querySelectorAll","resolveElements","gestureAbortController","AbortController","passive","signal","abort","isValidHover","event","pointerType","isNodeOrChild","parent","child","parentElement","isPrimaryPointer","button","isPrimary","focusableElements","Set","isPressing","WeakSet","filterEvents","firePointerEvent","target","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","onPressStart","eventOptions","cancelEvents","startPress","startEvent","element","currentTarget","add","onPressEnd","onPointerEnd","endEvent","success","removeEventListener","onPointerUp","onPointerCancel","delete","upEvent","useGlobalTarget","cancelEvent","addEventListener","tagName","tabIndex","isElementKeyboardAccessible","getAttribute","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","transformPropOrder","transformProps","positionalKeys","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","MotionGlobalConfig","any","stepsOrder","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","triggerCallback","step","schedule","keepAlive","immediate","queue","process","frameData","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","min","cancelFrame","frameSteps","requestAnimationFrame","clearTime","newTime","queueMicrotask","addUniqueItem","arr","item","indexOf","push","removeItem","index","splice","SubscriptionManager","handler","notify","numSubscriptions","getSize","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","init","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","resolve","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","setMotionValue","hasValue","getValue","addValue","isMotionValue","addValueToWillChange","willChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","warning","invariant","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","isNotNull","getFinalKeyframe","keyframes","repeat","repeatType","resolvedKeyframes","BaseAnimation","autoplay","delay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","isGenerator","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","mixNumber","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","sqrt","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mixer","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","springDefaults","stiffness","damping","mass","bounce","visualDuration","restSpeed","granular","restDelta","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","offset","remaining","offsetProgress","fillOffset","keyframeValues","times","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","startWaapiAnimation","valueName","keyframeOptions","iterations","direction","supportsWaapi","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","static","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","supports","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","numVariantProps","getVariantContext","isControllingVariants","context","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","addDomEvent","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","isRefObject","ref","SCALE_MIN","SCALE_MAX","TRANSLATE_MIN","TRANSLATE_MAX","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","microtask","cancelMicrotask","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","totalNodes","resolvedTargetDeltas","recalculatedProjection","isDebug","MotionDebug","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","record","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","includes","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","handleHoverEvent","lifecycle","handlePressEvent","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","lowercaseSVGElements","isSVGComponent","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createHtmlRenderState","createSvgRenderState","tag","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","isForcedMotionValue","newValues","charAt","layoutProps","svgMotionConfig","needsMeasure","getBBox","updateSVGDimensions","htmlMotionConfig","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","defaultType","computedStyle","SVGVisualElement","motion","OuterWrapper","styled","div","withConfig","componentId","breakpointNum","tablet","mobile","horizBreakpointsHeight","medium","Wrapper","ButtonWrapper","colors","green400","green800","_ref","$position","green950","_ref2","green700","_ref3","_ref4","green500","green550","green900","Shadow","CarouselItem","_ref5","$isCurrentImage","_ref6","_ref7","ImgWrapper","_ref8","$showZoom","StyledGatsbyImage","GatsbyImage","bigtablet","ImageOverlay","CloseImageCaption","T","green50","green200","green300","LargeImageWrapper","green100","StyledGatsbyImageLarge","thin","condition","handleWheel","preventDefault","handleTouchMove","handleMouseMove","images","currentIndex","setCurrentIndex","useState","showLargeImage","setShowLargeImage","swipeHandlers","touchStart","touchEnd","onTouchStart","targetTouches","clientX","onTouchMove","onTouchEnd","isRightSwipe","onSwipedLeft","onSwipedRight","useSwipe","handlePrev","handleNext","onClickImage","handleKeyDown","usePreventScrollOnImageView","getStyles","isCentralImage","isSideImage","React","S","onClick","Icon","image","className","dangerouslySetInnerHTML","__html","title","alt","copyright","description","closeImage","overflow"],"sourceRoot":""}