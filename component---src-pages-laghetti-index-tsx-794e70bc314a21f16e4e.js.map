{"version":3,"file":"component---src-pages-laghetti-index-tsx-794e70bc314a21f16e4e.js","mappings":"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","sources":["webpack://site-gruppo-natura-lentiai/./src/components/button-link/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/button-link/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/image-with-credits/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/image-with-credits/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/helpers.tsx","webpack://site-gruppo-natura-lentiai/./src/components/mobile-pagedata-text-components/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/styled.ts","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/helpers.tsx","webpack://site-gruppo-natura-lentiai/./src/components/pagedata-text-components/index.tsx","webpack://site-gruppo-natura-lentiai/./src/pages/laghetti/index.tsx"],"sourcesContent":["import styled from \"styled-components\"\nimport { colors } from \"../../styles\"\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin: 2em 0 2em 0;\n`\n\nexport const ButtonWrapper = styled.div`\n  text-align: center;\n  background-color: ${colors.green.green400};\n  padding: 0.8em;\n  max-width: 125px;\n  border-radius: 8px;\n  transition: all 0.5s;\n  &:hover {\n    background-color: ${colors.green.green500};\n  }\n  &:active {\n    background-color: ${colors.green.green600};\n  }\n  > p {\n    margin-top: 0;\n  }\n`\n","import { Link } from \"gatsby\"\nimport React from \"react\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\n\ninterface ButtonLinkProps {\n  to: string\n  label: string\n}\n\nconst ButtonLink = ({ to, label }: ButtonLinkProps) => (\n  <S.Wrapper>\n    <Link style={{ textDecoration: \"none\" }} to={to}>\n      <S.ButtonWrapper>\n        <T.P2>{label}</T.P2>\n      </S.ButtonWrapper>\n    </Link>\n  </S.Wrapper>\n)\n\nexport default ButtonLink\n","import styled from \"styled-components\"\nimport * as T from \"./../typography\"\n\nexport const ImgWrapper = styled.div<{\n  $maxWidth?: number\n  $maxHeight?: number\n  $minWidth?: number\n  $minHeight?: number\n}>`\n  text-align: center;\n  ${({ $maxWidth }) => ($maxWidth ? `max-width: ${$maxWidth}px;` : \"\")}\n  ${({ $maxHeight }) => ($maxHeight ? `max-width: ${$maxHeight}px;` : \"\")}\n  ${({ $minWidth }) => ($minWidth ? `min-width: ${$minWidth}px;` : \"\")}\n  ${({ $minHeight }) => ($minHeight ? `min-width: ${$minHeight}px;` : \"\")}\n`\n\nexport const ImageDescription = styled(T.P3)`\n  white-space: break-spaces;\n`\n","import { GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport * as T from \"./../typography\"\nimport * as S from \"./styled\"\n\nconst ImageWithCredits = ({\n  title,\n  description,\n  alt,\n  image,\n  copyright,\n  minHeight,\n  minWidth,\n  maxHeight,\n  maxWidth,\n  noDescription,\n  noCopyright,\n}: {\n  title: string\n  description: string\n  alt: string\n  image: IGatsbyImageData\n  copyright: string | undefined\n  minWidth?: number\n  minHeight?: number\n  maxWidth?: number\n  maxHeight?: number\n  noDescription?: boolean\n  noCopyright?: boolean\n}) => (\n  <S.ImgWrapper\n    $maxHeight={maxHeight}\n    $maxWidth={maxWidth}\n    $minHeight={minHeight}\n    $minWidth={minWidth}\n  >\n    {title && <T.H3 dangerouslySetInnerHTML={{ __html: title }} />}\n    <GatsbyImage\n      image={image}\n      alt={alt}\n      style={{ borderRadius: \"8px\", marginTop: 4 }}\n    />\n    {noCopyright ? null : copyright ? (\n      <T.P4>Foto di {copyright}</T.P4>\n    ) : (\n      <T.P4>Autore sconosciuto</T.P4>\n    )}\n    {!noDescription && (\n      <S.ImageDescription\n        style={{\n          maxWidth: image.width,\n        }}\n        dangerouslySetInnerHTML={{ __html: description }}\n      />\n    )}\n  </S.ImgWrapper>\n)\n\nexport default ImageWithCredits\n","import styled, { keyframes } from \"styled-components\"\nimport { breakpoint, breakpointNum, colors } from \"../../styles\"\nimport * as T from \"./../typography\"\nimport { color } from \"framer-motion\"\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 32px;\n  justify-content: center;\n  @media (min-width: ${breakpointNum.bigtablet + 1}px) {\n    display: none;\n  }\n  @media (max-width: ${breakpointNum.tablet}px) {\n    padding: 24px;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    padding: 16px;\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const TwoWrapperMobile = styled.div`\n  @media (min-width: ${breakpointNum.bigtablet + 1}px) {\n    display: none;\n  }\n  min-height: 100px;\n`\n\nexport const ContinueReading = styled(T.P2)`\n  color: ${colors.green.green700};\n`\n\nexport const TextWrapper = styled.div<{ $isExpanded: boolean }>`\n  position: relative;\n  overflow: hidden;\n  max-height: ${({ $isExpanded }) => ($isExpanded ? \"2000px\" : \"4.5em\")};\n  @media (max-width: ${breakpointNum.mobile}px) {\n    max-height: ${({ $isExpanded }) => ($isExpanded ? \"2000px\" : \"6em\")};\n  }\n  transition: max-height 0.8s ease-in-out;\n`\n\nexport const TextContainer = styled.div`\n  position: relative;\n`\n\nexport const FadeOut = styled.div<{ $isExpanded: boolean; $isShort: boolean }>`\n  ${({ $isShort }) => $isShort && \"display:none;\"}\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  height: 2em;\n  background: linear-gradient(to bottom, transparent, ${colors.green.green500});\n  pointer-events: none;\n\n  opacity: ${({ $isExpanded }) => ($isExpanded ? 0 : 1)};\n  transition: opacity 0.8s ease-in-out;\n`\n\nexport const ReadMoreWrapper = styled.div<{\n  $isExpanded: boolean\n  $isShort: boolean\n}>`\n  ${({ $isShort }) => $isShort && \"display:none;\"}\n  cursor: pointer;\n  position: absolute;\n  top: 2.3em;\n  z-index: 10;\n  justify-self: anchor-center;\n  ${({ $isExpanded }) => $isExpanded && \"position: unset;\"}\n\n  h3 {\n    color: ${colors.green.green950};\n    opacity: 0;\n    animation: fadeIn 1s ease-in-out forwards;\n    animation-delay: 0.5s;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  @media (min-width: ${breakpointNum.tablet + 1}px) {\n    top: 2em;\n  }\n  @media (max-width: ${breakpointNum.mobile}px) {\n    top: 4.2em;\n  }\n`\n","import React from \"react\"\nimport { ImageContentData, ImageData, TextContentData } from \"../../types\"\nimport ImageWithCredits from \"../image-with-credits\"\nimport * as T from \"../typography\"\nimport * as S from \"./styled\"\n\nexport const renderImage = (\n  content: ImageContentData,\n  images: ImageData[],\n  key: string,\n) => {\n  const filteredImages = content.content.map(imgFilename =>\n    images.find(img => img.fileName === imgFilename),\n  )\n  return (\n    <S.ImageWrapper key={key}>\n      {filteredImages.map((img, index) =>\n        img ? (\n          img.image && (\n            <ImageWithCredits\n              key={index}\n              title={img.title}\n              description={img.description}\n              alt={img.alt || img.description}\n              image={img.image}\n              copyright={img.copyright}\n              minHeight={content.minHeight}\n              minWidth={content.minWidth}\n              maxHeight={content.maxHeight}\n              maxWidth={content.maxWidth}\n              noDescription={content.noDescription}\n              noCopyright={content.noCopyright}\n            />\n          )\n        ) : (\n          <T.H2 key={`img-${index}`}>Image not found</T.H2>\n        ),\n      )}\n    </S.ImageWrapper>\n  )\n}\n\nconst renderTextInner =\n  (\n    size: string,\n    font: T.FontFamilies | undefined,\n    position: \"center\" | \"left\" | \"right\" | undefined,\n  ) =>\n  (text: string) => {\n    const addProps = {\n      $textAlign: position,\n      $font: font,\n      dangerouslySetInnerHTML: { __html: text },\n    }\n    switch (size) {\n      case \"h1\":\n        return <T.H1 {...addProps} />\n      case \"h2\":\n        return <T.H2 {...addProps} />\n      case \"h3\":\n        return <T.H3 {...addProps} />\n      case \"h4\":\n        return <T.H4 {...addProps} />\n      case \"h5\":\n        return <T.H5 {...addProps} />\n      case \"h6\":\n        return <T.H6 {...addProps} />\n      case \"h7\":\n        return <T.H7 {...addProps} />\n      case \"p1\":\n        return <T.P1 {...addProps} />\n      case \"p2\":\n        return <T.P2 {...addProps} />\n      case \"p3\":\n        return <T.P3 {...addProps} />\n      case \"p4\":\n        return <T.P1 {...addProps} />\n      case \"p5\":\n        return <T.P1 {...addProps} />\n      case \"note\":\n        return <T.Notes {...addProps} />\n      default:\n        return <T.H2>Text size not found</T.H2>\n    }\n  }\n\nexport const renderText = (\n  content: TextContentData,\n  key: string,\n  setExpandText: React.Dispatch<React.SetStateAction<string>>,\n  expandText: string,\n) => {\n  const theText = content.content.join(\" <br /> \")\n  if (!theText) return <T.H2 key={key}>Text not found</T.H2>\n\n  const isExpanded = key === expandText\n  const onClickFn = () => {\n    if (key === expandText) setExpandText(\"\")\n    else setExpandText(key)\n  }\n\n  const isShortText = theText.length <= 135\n\n  const { font, position, collapsible } = content\n  const textRenderer = renderTextInner(content.size, font, position)\n\n  if (collapsible === false)\n    return <React.Fragment key={key}>{textRenderer(theText)}</React.Fragment>\n\n  return (\n    <S.TextWrapper $isExpanded={isExpanded} key={key}>\n      <S.TextContainer onClick={onClickFn}>\n        {textRenderer(theText)}\n      </S.TextContainer>\n      <S.FadeOut $isExpanded={isExpanded} $isShort={isShortText} />\n      <S.ReadMoreWrapper\n        $isExpanded={isExpanded}\n        $isShort={isShortText}\n        onClick={onClickFn}\n      >\n        <T.H3 key={isExpanded ? \"chiudi\" : \"leggi-di-piu\"}>\n          {isExpanded ? \"Chiudi\" : \"Leggi di più\"}\n        </T.H3>\n      </S.ReadMoreWrapper>\n    </S.TextWrapper>\n  )\n}\n","import React, { useState } from \"react\"\nimport {\n  DataJSONType,\n  ImageContentData,\n  ImageData,\n  TemplateTwoColumnsData,\n  TextContentData,\n} from \"../../types\"\nimport * as T from \"./../typography\"\nimport { renderImage, renderText } from \"./helpers\"\nimport * as S from \"./styled\"\n\nconst renderComponents =\n  (\n    images: ImageData[],\n    setExpandText: React.Dispatch<React.SetStateAction<any>>,\n    expandText: any,\n  ) =>\n  (content: DataJSONType[number], key: Number | string): any => {\n    const keyString = key.toString()\n    switch (content.type) {\n      case \"image\":\n        const castedImgContent = content as ImageContentData\n        return renderImage(castedImgContent, images, keyString)\n\n      case \"text\":\n        const castedTextContent = content as TextContentData\n        return renderText(\n          castedTextContent,\n          keyString,\n          setExpandText,\n          expandText,\n        )\n\n      case \"two-columns\": {\n        const castedTwoColsComponent = content as TemplateTwoColumnsData\n        const [leftComponents, rightComponents] = castedTwoColsComponent.content\n        return (\n          <S.TwoWrapperMobile key={keyString}>\n            {[...leftComponents, ...rightComponents].map((lc, idx) =>\n              renderComponents(\n                images,\n                setExpandText,\n                expandText,\n              )(lc, `two-cols-seq-${keyString}-${idx}`),\n            )}\n          </S.TwoWrapperMobile>\n        )\n      }\n      default:\n        return <T.H1 key={keyString}>Content type Not Found</T.H1>\n    }\n  }\n\nconst MobileContentToComponent: React.FC<{\n  pageData: DataJSONType\n  images: ImageData[]\n}> = ({ pageData, images }) => {\n  const [expandText, setExpandText] = useState(\"\")\n  return (\n    <S.MainWrapper>\n      {pageData.map(renderComponents(images, setExpandText, expandText))}\n    </S.MainWrapper>\n  )\n}\nexport default MobileContentToComponent\n","import styled from \"styled-components\"\nimport { breakpoint, breakpointNum } from \"../../styles\"\n\nexport const MainWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 32px;\n  justify-content: center;\n  @media (max-width: ${breakpointNum.bigtablet}px) {\n    display: none;\n  }\n`\n\nexport const ImageWrapper = styled.div`\n  display: flex;\n  gap: 40px;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const TwoColsWrapper = styled.div`\n  display: flex;\n  @media (max-width: ${breakpoint.bigtablet}) {\n    display: none;\n  }\n  &:nth-child(odd) {\n    flex-direction: row;\n  }\n  &:nth-child(even) {\n    flex-direction: row-reverse;\n  }\n`\n\nexport const LeftTwoColsWrapper = styled.div`\n  flex: 1;\n  padding: 16px;\n  align-content: center;\n  justify-items: center;\n`\n\nexport const RightTwoColsWrapper = styled.div`\n  flex: 1;\n  padding: 16px;\n  align-content: center;\n  justify-items: center;\n`\n","import {\n  DataJSONType,\n  ImageContentData,\n  ImageData,\n  TemplateTwoColumnsData,\n  TextContentData,\n} from \"../../types\"\nimport ImageWithCredits from \"../image-with-credits\"\nimport * as S from \"./styled\"\nimport * as T from \"./../typography\"\nimport React from \"react\"\n\nconst renderTextInner =\n  (\n    size: string,\n    font: T.FontFamilies | undefined,\n    position: \"center\" | \"left\" | \"right\" | undefined,\n  ) =>\n  (text: string) => {\n    const addProps = {\n      $textAlign: position,\n      $font: font,\n      dangerouslySetInnerHTML: { __html: text },\n    }\n    switch (size) {\n      case \"h1\":\n        return <T.H1 {...addProps} />\n      case \"h2\":\n        return <T.H2 {...addProps} />\n      case \"h3\":\n        return <T.H3 {...addProps} />\n      case \"h4\":\n        return <T.H4 {...addProps} />\n      case \"h5\":\n        return <T.H5 {...addProps} />\n      case \"h6\":\n        return <T.H6 {...addProps} />\n      case \"h7\":\n        return <T.H7 {...addProps} />\n      case \"p1\":\n        return <T.P1 {...addProps} />\n      case \"p2\":\n        return <T.P2 {...addProps} />\n      case \"p3\":\n        return <T.P3 {...addProps} />\n      case \"p4\":\n        return <T.P1 {...addProps} />\n      case \"p5\":\n        return <T.P1 {...addProps} />\n      case \"note\":\n        return <T.Notes {...addProps} />\n      default:\n        return <T.H2>Text size not found</T.H2>\n    }\n  }\n\nexport const renderComponents =\n  (images: ImageData[]) =>\n  (content: DataJSONType[number], key: Number | string): any => {\n    const keyString = key.toString()\n\n    switch (content.type) {\n      case \"image\":\n        const castedImgContent = content as ImageContentData\n        const filteredImages = castedImgContent.content.map(imgFilename =>\n          images.find(img => img.fileName === imgFilename),\n        )\n        return (\n          <S.ImageWrapper key={keyString}>\n            {filteredImages.map((img, index) =>\n              img ? (\n                img.image && (\n                  <ImageWithCredits\n                    key={index}\n                    title={img.title}\n                    description={img.description}\n                    alt={img.alt || img.description}\n                    image={img.image}\n                    copyright={img.copyright}\n                    minHeight={content.minHeight}\n                    minWidth={content.minWidth}\n                    maxHeight={content.maxHeight}\n                    maxWidth={content.maxWidth}\n                    noDescription={content.noDescription}\n                    noCopyright={content.noCopyright}\n                  />\n                )\n              ) : (\n                <T.H2 key={`img-${index}`}>Image not found</T.H2>\n              ),\n            )}\n          </S.ImageWrapper>\n        )\n      case \"text\":\n        const castedTextContent = content as TextContentData\n        const theText = castedTextContent.content.join(\" <br /> \")\n        if (!theText) return <T.H2 key={keyString}>Text not found</T.H2>\n\n        const { font, position, size } = castedTextContent\n        const textRenderer = renderTextInner(size, font, position)\n        return <>{textRenderer(theText)}</>\n\n      case \"two-columns\": {\n        const castedTwoColsComponent = content as TemplateTwoColumnsData\n        const [leftComponents, rightComponents] = castedTwoColsComponent.content\n        return (\n          <S.TwoColsWrapper key={keyString}>\n            <S.LeftTwoColsWrapper>\n              {leftComponents.map((lc, idx) =>\n                renderComponents(images)(lc, `two-cols-left-${idx}`),\n              )}\n            </S.LeftTwoColsWrapper>\n            <S.RightTwoColsWrapper>\n              {rightComponents.map((lc, idx) =>\n                renderComponents(images)(lc, `two-cols-right-${idx}`),\n              )}\n            </S.RightTwoColsWrapper>\n          </S.TwoColsWrapper>\n        )\n      }\n      default:\n        return <T.H1 key={keyString}>Content type Not Found</T.H1>\n    }\n  }\n","import React from \"react\"\nimport { DataJSONType, ImageData } from \"../../types\"\nimport { renderComponents } from \"./helpers\"\nimport * as S from \"./styled\"\n\nconst ContentToComponent: React.FC<{\n  pageData: DataJSONType\n  images: ImageData[]\n}> = ({ pageData, images }) => (\n  <S.MainWrapper>{pageData.map(renderComponents(images))}</S.MainWrapper>\n)\n\nexport default ContentToComponent\n","import { graphql, useStaticQuery, type HeadFC, type PageProps } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport * as React from \"react\"\nimport dataJSON from \"../../../content/laghetti/index.json\"\nimport ButtonLink from \"../../components/button-link\"\nimport DefaultLayout from \"../../components/default-layout\"\nimport MobileContentToComponent from \"../../components/mobile-pagedata-text-components\"\nimport ContentToComponent from \"../../components/pagedata-text-components\"\nimport { DataJSONType, ImageData } from \"../../types\"\nimport * as T from \"./../../components/typography\"\n\nconst LaghettiPage: React.FC<PageProps> = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allImageMetadataJson(filter: { tags: { in: [\"laghetti-main\"] } }) {\n        nodes {\n          title\n          description\n          fileName\n          tags\n          copyright\n          alt\n        }\n      }\n      allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        nodes {\n          base\n          childImageSharp {\n            gatsbyImageData(\n              width: 1200\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n      }\n    }\n  `)\n\n  const content = dataJSON.index as DataJSONType\n  if (!content)\n    return (\n      <DefaultLayout>\n        <T.H1>Contenuto non trovato!</T.H1>\n      </DefaultLayout>\n    )\n\n  // Map metadata and image nodes\n  const metadata = data.allImageMetadataJson.nodes\n  const images = data.allFile.nodes\n\n  // Match images to metadata using the fileName\n  const filteredImages = metadata.map((meta: any) => {\n    const image = images.find((img: any) => img.base === meta.fileName)\n    return {\n      ...meta,\n      image: image ? getImage(image.childImageSharp) : null,\n    }\n  }) as ImageData[]\n  const coverUp = getImage(\n    images.find((img: any) => img.base === \"rimonta-cover-01.jpg\")\n      .childImageSharp,\n  )\n  const coverDown = getImage(\n    images.find((img: any) => img.base === \"rimonta-cover-02.jpg\")\n      .childImageSharp,\n  )\n\n  return (\n    <DefaultLayout>\n      <div style={{ padding: 16 }}>\n        <div style={{ justifySelf: \"center\" }}>\n          {coverUp && (\n            <GatsbyImage\n              image={coverUp}\n              alt={\"Una passerella in legno con dietro il torrente Rimonta\"}\n              style={{ borderRadius: \"8px\", marginTop: 4, maxWidth: 1200 }}\n            />\n          )}\n          <T.P4 $textAlign=\"center\">Foto di Walter Argenta</T.P4>\n        </div>\n        <ContentToComponent pageData={content} images={filteredImages} />\n        <MobileContentToComponent pageData={content} images={filteredImages} />\n        <ButtonLink to=\"mappe\" label=\"Vai a mappe!\" />\n        <div style={{ justifySelf: \"center\" }}>\n          {coverDown && (\n            <GatsbyImage\n              image={coverDown}\n              alt={\"Un panorama invernale dei laghetti della Rimonta\"}\n              style={{ borderRadius: \"8px\", marginTop: 4, maxWidth: 1200 }}\n            />\n          )}\n          <T.P4 $textAlign=\"center\">Foto di Walter Argenta</T.P4>\n        </div>\n      </div>\n    </DefaultLayout>\n  )\n}\n\nexport default LaghettiPage\n\nexport const Head: HeadFC = () => (\n  <title>Gruppo Natura Lentiai - Laghetti della Rimonta</title>\n)\n"],"names":["Wrapper","styled","div","withConfig","displayName","componentId","ButtonWrapper","colors","green","green400","green500","green600","_ref","to","label","React","S","Link","style","textDecoration","T","ImgWrapper","$maxWidth","_ref2","$maxHeight","_ref3","$minWidth","_ref4","$minHeight","ImageDescription","title","description","alt","image","copyright","minHeight","minWidth","maxHeight","maxWidth","noDescription","noCopyright","dangerouslySetInnerHTML","__html","GatsbyImage","borderRadius","marginTop","width","MainWrapper","breakpointNum","bigtablet","tablet","mobile","ImageWrapper","TwoWrapperMobile","TextWrapper","green700","$isExpanded","TextContainer","FadeOut","$isShort","ReadMoreWrapper","_ref5","_ref6","green950","renderText","content","key","setExpandText","expandText","theText","join","isExpanded","onClickFn","isShortText","length","font","position","collapsible","textRenderer","renderTextInner","size","text","addProps","$textAlign","$font","onClick","renderComponents","images","keyString","toString","type","renderImage","filteredImages","map","imgFilename","find","img","fileName","index","ImageWithCredits","castedTwoColsComponent","leftComponents","rightComponents","concat","_toConsumableArray","lc","idx","pageData","useState","TwoColsWrapper","breakpoint","LeftTwoColsWrapper","RightTwoColsWrapper","castedTextContent","LaghettiPage","data","useStaticQuery","dataJSON","DefaultLayout","metadata","allImageMetadataJson","nodes","allFile","meta","base","getImage","childImageSharp","coverUp","coverDown","padding","justifySelf","ContentToComponent","MobileContentToComponent","ButtonLink","Head"],"sourceRoot":""}