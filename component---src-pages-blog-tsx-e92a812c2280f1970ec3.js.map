{"version":3,"file":"component---src-pages-blog-tsx-e92a812c2280f1970ec3.js","mappings":"2LAUA,MARyBA,IAErBC,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,eCKV,MARyBC,IAErBD,EAAAA,cAAAA,SAAAA,KACEA,EAAAA,cAAAA,KAAAA,KAAI,eCSV,MAVmDE,IAAmB,IAAlB,SAAEC,GAAU,EAC9D,OACEH,EAAAA,cAAAA,EAAAA,SAAAA,KACEA,EAAAA,cAACC,EAAM,MACPD,EAAAA,cAAAA,OAAAA,KAAOG,GACPH,EAAAA,cAACD,EAAM,MACN,C,mGC0DP,UA9DaK,KACX,MAAM,EAACC,EAAK,EAAEC,IAAYC,EAAAA,EAAAA,UAAgB,KACpC,EAACC,EAAO,EAAEC,IAAcF,EAAAA,EAAAA,WAAkB,IAC1C,EAACG,EAAK,EAAEC,IAAYJ,EAAAA,EAAAA,UAAwB,MA0ClD,OAxCAK,EAAAA,EAAAA,YAAU,KACWC,WACjBJ,GAAW,GACXE,EAAS,MACT,IACE,MAAMG,QAAiBC,MAAM,cAAe,CAC1CC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,8QAeLC,QAAeR,EAASS,OAC9B,GAAID,EAAOE,OACT,MAAM,IAAIC,MAAMH,EAAOE,OAAO,GAAGE,SAGnCpB,EAASgB,EAAOK,KAAKC,cAAcC,MACrC,CAAE,MAAOC,GACPnB,EAASmB,EAAIJ,QACf,CAAE,QACAjB,GAAW,EACb,GAGFsB,EAAY,GACX,IAECvB,EAAgBR,EAAAA,cAAAA,IAAAA,KAAG,oBACnBU,EAAcV,EAAAA,cAAAA,IAAAA,KAAG,UAAQU,GAG3BV,EAAAA,cAACgC,EAAAA,EAAa,KACZhC,EAAAA,cAAAA,KAAAA,KAAI,QACJA,EAAAA,cAAAA,KAAAA,KACGK,EAAM4B,KAAKC,GACVlC,EAAAA,cAAAA,KAAAA,CAAImC,IAAKD,EAAKE,KAAKC,SACjBrC,EAAAA,cAACsC,EAAAA,KAAI,CAACC,GAAE,GAAKL,EAAKE,KAAKC,SAAYH,EAAKM,WAIhC,EAMb,MAAMC,EAAeA,IAC1BzC,EAAAA,cAAAA,QAAAA,KAAO,+B","sources":["webpack://site-gruppo-natura-lentiai/./src/components/footer/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/header/index.tsx","webpack://site-gruppo-natura-lentiai/./src/components/default-layout/index.tsx","webpack://site-gruppo-natura-lentiai/./src/pages/blog.tsx"],"sourcesContent":["import React from \"react\"\n\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <h1>The Footer</h1>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from \"react\"\n\nconst Header: React.FC = () => {\n  return (\n    <header>\n      <h1>The Header</h1>\n    </header>\n  )\n}\n\nexport default Header\n","import React from \"react\"\nimport Footer from \"../footer\"\nimport Header from \"../header\"\n\nconst DefaultLayout: React.FC<{ children: any }> = ({ children }) => {\n  return (\n    <>\n      <Header />\n      <main>{children}</main>\n      <Footer />\n    </>\n  )\n}\n\nexport default DefaultLayout\n","// src/pages/blog.tsx\n\nimport React, { useEffect, useState } from \"react\"\nimport { HeadFC, Link } from \"gatsby\"\nimport DefaultLayout from \"../components/default-layout\"\n\nconst Blog = () => {\n  const [posts, setPosts] = useState<any[]>([])\n  const [loading, setLoading] = useState<boolean>(true)\n  const [error, setError] = useState<string | null>(null)\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true)\n      setError(null)\n      try {\n        const response = await fetch(\"/___graphql\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            query: `\n              query {\n                allSanityPost {\n                  nodes {\n                    slug {\n                      current\n                    }\n                    title\n                  }\n                }\n              }\n            `,\n          }),\n        })\n\n        const result = await response.json()\n        if (result.errors) {\n          throw new Error(result.errors[0].message)\n        }\n\n        setPosts(result.data.allSanityPost.nodes)\n      } catch (err: any) {\n        setError(err.message)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchPosts()\n  }, [])\n\n  if (loading) return <p>Loading posts...</p>\n  if (error) return <p>Error: {error}</p>\n\n  return (\n    <DefaultLayout>\n      <h1>Blog</h1>\n      <ul>\n        {posts.map((post: { title: string; slug: { current: string } }) => (\n          <li key={post.slug.current}>\n            <Link to={`${post.slug.current}`}>{post.title}</Link>\n          </li>\n        ))}\n      </ul>\n    </DefaultLayout>\n  )\n}\n\nexport default Blog\n\nexport const Head: HeadFC = () => (\n  <title>Gruppo Natura Lentiai - Blog</title>\n)\n\n"],"names":["Footer","React","Header","_ref","children","Blog","posts","setPosts","useState","loading","setLoading","error","setError","useEffect","async","response","fetch","method","headers","body","JSON","stringify","query","result","json","errors","Error","message","data","allSanityPost","nodes","err","fetchPosts","DefaultLayout","map","post","key","slug","current","Link","to","title","Head"],"sourceRoot":""}